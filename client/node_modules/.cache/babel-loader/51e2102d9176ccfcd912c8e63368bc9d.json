{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport KTToggle from \"./../../components/toggle.js\";\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTLayoutStickyCard from \"./../extended/sticky-card.js\";\nimport KTLayoutHeaderMenu from \"./header-menu.js\";\nimport KTLayoutAsideMenu from \"./aside-menu.js\";\nimport { KTCookie } from \"./../../components/cookie.js\";\n\nvar KTLayoutAsideToggle = function () {\n  // Private properties\n  var _body;\n\n  var _element;\n\n  var _toggleObject; // Initialize\n\n\n  var _init = function _init() {\n    _toggleObject = new KTToggle(_element, {\n      target: _body,\n      targetState: 'aside-minimize',\n      toggleState: 'active'\n    });\n\n    _toggleObject.on('toggle', function (toggle) {\n      KTUtil.addClass(_body, 'aside-minimizing');\n      KTUtil.transitionEnd(_body, function () {\n        KTUtil.removeClass(_body, 'aside-minimizing');\n      }); // Update sticky card\n\n      KTLayoutStickyCard.update(); // Pause header menu dropdowns\n\n      KTLayoutHeaderMenu.pauseDropdownHover(800); // Pause aside menu dropdowns\n\n      KTLayoutAsideMenu.pauseDropdownHover(800); // Remember state in cookie\n\n      KTCookie.setCookie('kt_aside_toggle_state', toggle.getState()); // to set default minimized left aside use this cookie value in your\n      // server side code and add \"kt-primary--minimize aside-minimize\" classes to\n      // the body tag in order to initialize the minimized left aside mode during page loading.\n    });\n\n    _toggleObject.on('beforeToggle', function (toggle) {\n      if (KTUtil.hasClass(_body, 'aside-minimize') === false && KTUtil.hasClass(_body, 'aside-minimize-hover')) {\n        KTUtil.removeClass(_body, 'aside-minimize-hover');\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init(id) {\n      _element = KTUtil.getById(id);\n      _body = KTUtil.getBody();\n\n      if (!_element) {\n        return;\n      } // Initialize\n\n\n      _init();\n    },\n    getElement: function getElement() {\n      return _element;\n    },\n    getToggle: function getToggle() {\n      return _toggleObject;\n    },\n    onToggle: function onToggle(handler) {\n      if (typeof _toggleObject.element !== 'undefined') {\n        _toggleObject.on('toggle', handler);\n      }\n    }\n  };\n}(); // Webpack support\n\n\nif (typeof module !== 'undefined') {// module.exports = KTLayoutAsideToggle;\n}\n\nexport default KTLayoutAsideToggle;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/_metronic/_assets/js/layout/base/aside-toggle.js"],"names":["KTToggle","KTUtil","KTLayoutStickyCard","KTLayoutHeaderMenu","KTLayoutAsideMenu","KTCookie","KTLayoutAsideToggle","_body","_element","_toggleObject","_init","target","targetState","toggleState","on","toggle","addClass","transitionEnd","removeClass","update","pauseDropdownHover","setCookie","getState","hasClass","init","id","getById","getBody","getElement","getToggle","onToggle","handler","element","module"],"mappings":"AAAA;AACA;;AAEA,OAAOA,QAAP,MAAqB,8BAArB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,IAAIC,mBAAmB,GAAG,YAAW;AACjC;AACA,MAAIC,KAAJ;;AACA,MAAIC,QAAJ;;AACA,MAAIC,aAAJ,CAJiC,CAMpC;;;AACA,MAAIC,KAAK,GAAG,SAARA,KAAQ,GAAW;AACtBD,IAAAA,aAAa,GAAG,IAAIT,QAAJ,CAAaQ,QAAb,EAAuB;AACtCG,MAAAA,MAAM,EAAEJ,KAD8B;AAEtCK,MAAAA,WAAW,EAAE,gBAFyB;AAGtCC,MAAAA,WAAW,EAAE;AAHyB,KAAvB,CAAhB;;AAMAJ,IAAAA,aAAa,CAACK,EAAd,CAAiB,QAAjB,EAA2B,UAASC,MAAT,EAAiB;AAC3Cd,MAAAA,MAAM,CAACe,QAAP,CAAgBT,KAAhB,EAAuB,kBAAvB;AACSN,MAAAA,MAAM,CAACgB,aAAP,CAAqBV,KAArB,EAA4B,YAAW;AACnCN,QAAAA,MAAM,CAACiB,WAAP,CAAmBX,KAAnB,EAA0B,kBAA1B;AACZ,OAFQ,EAFkC,CAMlC;;AACAL,MAAAA,kBAAkB,CAACiB,MAAnB,GAPkC,CASlC;;AACAhB,MAAAA,kBAAkB,CAACiB,kBAAnB,CAAsC,GAAtC,EAVkC,CAYlC;;AACThB,MAAAA,iBAAiB,CAACgB,kBAAlB,CAAqC,GAArC,EAb2C,CAelC;;AACTf,MAAAA,QAAQ,CAACgB,SAAT,CAAmB,uBAAnB,EAA4CN,MAAM,CAACO,QAAP,EAA5C,EAhB2C,CAiB3C;AACA;AACA;AACA,KApBD;;AAsBAb,IAAAA,aAAa,CAACK,EAAd,CAAiB,cAAjB,EAAiC,UAASC,MAAT,EAAiB;AACjD,UAAId,MAAM,CAACsB,QAAP,CAAgBhB,KAAhB,EAAuB,gBAAvB,MAA6C,KAA7C,IAAsDN,MAAM,CAACsB,QAAP,CAAgBhB,KAAhB,EAAuB,sBAAvB,CAA1D,EAA0G;AACzGN,QAAAA,MAAM,CAACiB,WAAP,CAAmBX,KAAnB,EAA0B,sBAA1B;AACA;AACD,KAJD;AAKA,GAlCD,CAPoC,CA2CjC;;;AACH,SAAO;AACNiB,IAAAA,IAAI,EAAE,cAASC,EAAT,EAAa;AACTjB,MAAAA,QAAQ,GAAGP,MAAM,CAACyB,OAAP,CAAeD,EAAf,CAAX;AACAlB,MAAAA,KAAK,GAAGN,MAAM,CAAC0B,OAAP,EAAR;;AAEA,UAAI,CAACnB,QAAL,EAAe;AACX;AACH,OANQ,CAQT;;;AACAE,MAAAA,KAAK;AACd,KAXK;AAaAkB,IAAAA,UAAU,EAAE,sBAAW;AACnB,aAAOpB,QAAP;AACH,KAfD;AAiBAqB,IAAAA,SAAS,EAAE,qBAAW;AAC3B,aAAOpB,aAAP;AACA,KAnBK;AAqBNqB,IAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC3B,UAAI,OAAOtB,aAAa,CAACuB,OAArB,KAAiC,WAArC,EAAkD;AACjDvB,QAAAA,aAAa,CAACK,EAAd,CAAiB,QAAjB,EAA2BiB,OAA3B;AACA;AACD;AAzBK,GAAP;AA2BA,CAvEyB,EAA1B,C,CAyEA;;;AACA,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC,CAClC;AACA;;AAED,eAAe3B,mBAAf","sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport KTToggle from \"./../../components/toggle.js\";\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTLayoutStickyCard from \"./../extended/sticky-card.js\";\nimport KTLayoutHeaderMenu from \"./header-menu.js\";\nimport KTLayoutAsideMenu from \"./aside-menu.js\";\nimport { KTCookie } from \"./../../components/cookie.js\";\r\n\r\nvar KTLayoutAsideToggle = function() {\r\n    // Private properties\r\n    var _body;\r\n    var _element;\r\n    var _toggleObject;\r\n\r\n\t// Initialize\r\n\tvar _init = function() {\r\n\t\t_toggleObject = new KTToggle(_element, {\r\n\t\t\ttarget: _body,\r\n\t\t\ttargetState: 'aside-minimize',\r\n\t\t\ttoggleState: 'active'\r\n\t\t});\r\n\r\n\t\t_toggleObject.on('toggle', function(toggle) {\r\n\t\t\tKTUtil.addClass(_body, 'aside-minimizing');\r\n            KTUtil.transitionEnd(_body, function() {\r\n                KTUtil.removeClass(_body, 'aside-minimizing');\r\n\t\t\t});\r\n\r\n            // Update sticky card\r\n            KTLayoutStickyCard.update();\r\n\r\n            // Pause header menu dropdowns\r\n            KTLayoutHeaderMenu.pauseDropdownHover(800);\r\n\r\n            // Pause aside menu dropdowns\r\n\t\t\tKTLayoutAsideMenu.pauseDropdownHover(800);\r\n\r\n            // Remember state in cookie\r\n\t\t\tKTCookie.setCookie('kt_aside_toggle_state', toggle.getState());\r\n\t\t\t// to set default minimized left aside use this cookie value in your\r\n\t\t\t// server side code and add \"kt-primary--minimize aside-minimize\" classes to\r\n\t\t\t// the body tag in order to initialize the minimized left aside mode during page loading.\r\n\t\t});\r\n\r\n\t\t_toggleObject.on('beforeToggle', function(toggle) {\r\n\t\t\tif (KTUtil.hasClass(_body, 'aside-minimize') === false && KTUtil.hasClass(_body, 'aside-minimize-hover')) {\r\n\t\t\t\tKTUtil.removeClass(_body, 'aside-minimize-hover');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n    // Public methods\r\n\treturn {\r\n\t\tinit: function(id) {\r\n            _element = KTUtil.getById(id);\r\n            _body = KTUtil.getBody();\r\n\r\n            if (!_element) {\r\n                return;\r\n            }\r\n\r\n            // Initialize\r\n            _init();\r\n\t\t},\r\n\r\n        getElement: function() {\r\n            return _element;\r\n        },\r\n\r\n        getToggle: function() {\r\n\t\t\treturn _toggleObject;\r\n\t\t},\r\n\r\n\t\tonToggle: function(handler) {\r\n\t\t\tif (typeof _toggleObject.element !== 'undefined') {\r\n\t\t\t\t_toggleObject.on('toggle', handler);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n\t// module.exports = KTLayoutAsideToggle;\r\n}\r\n\nexport default KTLayoutAsideToggle;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/Auth/pages/ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Input } from \"../../../../_metronic/_partials/controls\";\nimport { injectIntl } from \"react-intl\";\nimport * as auth from \"../_redux/authRedux\";\nimport { requestPassword } from \"../_redux/authCrud\"; // TODO: Rewrite to pure function\n\nvar ForgotPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  var _super = _createSuper(ForgotPassword);\n\n  function ForgotPassword() {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isRequested: false\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var intl = this.props.intl;\n      var isRequested = this.state.isRequested;\n\n      if (isRequested) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/auth\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 20\n          }\n        });\n      }\n\n      var getInputClasses = function getInputClasses(meta, fieldname) {\n        var result = \"form-control form-control-solid h-auto py-5 px-6 \";\n\n        if (meta.touched && meta.error) {\n          result += \" is-invalid\";\n        }\n\n        if (meta.touched && !meta.error) {\n          result += \" is-valid\";\n        }\n\n        return result;\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mb-10 mb-lg-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"font-size-h1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Forgotten Password ?\")), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          email: \"\"\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = intl.formatMessage({\n              id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n            });\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = intl.formatMessage({\n              id: \"AUTH.VALIDATION.INVALID_FIELD\"\n            });\n          }\n\n          return errors;\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setStatus = _ref.setStatus,\n              setSubmitting = _ref.setSubmitting;\n          requestPassword(values.email).then(function () {\n            _this2.setState({\n              isRequested: true\n            });\n          }).catch(function () {\n            setSubmitting(false);\n            setStatus(intl.formatMessage({\n              id: \"AUTH.VALIDATION.NOT_FOUND\"\n            }, {\n              name: values.email\n            }));\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, function (_ref2) {\n        var values = _ref2.values,\n            status = _ref2.status,\n            errors = _ref2.errors,\n            touched = _ref2.touched,\n            handleChange = _ref2.handleChange,\n            handleBlur = _ref2.handleBlur,\n            handleSubmit = _ref2.handleSubmit,\n            isSubmitting = _ref2.isSubmitting;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }\n        }, status && /*#__PURE__*/React.createElement(\"div\", {\n          role: \"alert\",\n          className: \"alert alert-danger\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert-text\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }\n        }, status)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          type: \"email\",\n          name: \"email\",\n          component: Input,\n          placeholder: \"Email\",\n          label: \"Email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }\n        }, function (_ref3) {\n          var field = _ref3.field,\n              form = _ref3.form,\n              meta = _ref3.meta;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n            type: \"email\"\n          }, field, {\n            className: \"\".concat(getInputClasses(meta)),\n            placeholder: \"Enter Email\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 45\n            }\n          })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error invalid-feedback\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 59\n            }\n          }, meta.error));\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group d-flex flex-wrap flex-center\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          id: \"kt_login_forgot_submit\",\n          type: \"submit\",\n          className: \"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\",\n          disabled: isSubmitting,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }\n        }, \"Submit\"), /*#__PURE__*/React.createElement(Link, {\n          to: \"/auth\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          id: \"kt_login_forgot_cancel\",\n          className: \"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }\n        }, \"Cancel\"))));\n      }));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nexport default injectIntl(connect(null, auth.actions)(ForgotPassword));","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/Auth/pages/ForgotPassword.js"],"names":["React","Component","Formik","Field","connect","Link","Redirect","Input","injectIntl","auth","requestPassword","ForgotPassword","state","isRequested","intl","props","getInputClasses","meta","fieldname","result","touched","error","email","values","errors","formatMessage","id","test","setStatus","setSubmitting","then","setState","catch","name","status","handleChange","handleBlur","handleSubmit","isSubmitting","field","form","actions"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Formik, Field} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Input} from \"../../../../_metronic/_partials/controls\";\r\nimport {injectIntl} from \"react-intl\";\r\nimport * as auth from \"../_redux/authRedux\";\r\nimport {requestPassword} from \"../_redux/authCrud\";\r\n\r\n// TODO: Rewrite to pure function\r\nclass ForgotPassword extends Component {\r\n    state = {isRequested: false};\r\n\r\n    render() {\r\n        const {intl} = this.props;\r\n        const {isRequested} = this.state;\r\n\r\n        if (isRequested) {\r\n            return <Redirect to=\"/auth\"/>;\r\n        }\r\n\r\n        const getInputClasses = (meta, fieldname) => {\r\n            let result = \"form-control form-control-solid h-auto py-5 px-6 \";\r\n            if (meta.touched && meta.error) {\r\n                result += \" is-invalid\"\r\n            }\r\n\r\n            if (meta.touched && !meta.error) {\r\n                result += \" is-valid\"\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-form\">\r\n                <div className=\"text-center mb-10 mb-lg-20\">\r\n                    <h3 className=\"font-size-h1\">Forgotten Password ?</h3>\r\n                </div>\r\n\r\n                <Formik\r\n                    initialValues={{email: \"\"}}\r\n                    validate={values => {\r\n                        const errors = {};\r\n\r\n                        if (!values.email) {\r\n                            errors.email = intl.formatMessage({\r\n                                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                            });\r\n                        } else if (\r\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                        ) {\r\n                            errors.email = intl.formatMessage({\r\n                                id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n                            });\r\n                        }\r\n\r\n                        return errors;\r\n                    }}\r\n                    onSubmit={(values, {setStatus, setSubmitting}) => {\r\n                        requestPassword(values.email)\r\n                            .then(() => {\r\n                                this.setState({isRequested: true});\r\n                            })\r\n                            .catch(() => {\r\n                                setSubmitting(false);\r\n                                setStatus(\r\n                                    intl.formatMessage(\r\n                                        {id: \"AUTH.VALIDATION.NOT_FOUND\"},\r\n                                        {name: values.email}\r\n                                    )\r\n                                );\r\n                            });\r\n                    }}\r\n                >\r\n                    {({\r\n                          values,\r\n                          status,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting\r\n                      }) => (\r\n                        <form onSubmit={handleSubmit} className=\"form\">\r\n                            {status && (\r\n                                <div role=\"alert\" className=\"alert alert-danger\">\r\n                                    <div className=\"alert-text\">{status}</div>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    component={Input}\r\n                                    placeholder=\"Email\"\r\n                                    label=\"Email\"\r\n                                >\r\n\r\n                                    {({field, form, meta}) => (\r\n                                        <div>\r\n                                            <input\r\n                                                type=\"email\" {...field}\r\n                                                className={`${getInputClasses(meta)}`}\r\n                                                placeholder=\"Enter Email\"/>\r\n                                            {meta.touched &&\r\n                                            meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                                        </div>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n\r\n                            <div className=\"form-group d-flex flex-wrap flex-center\">\r\n                                <button\r\n                                    id=\"kt_login_forgot_submit\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n                                    disabled={isSubmitting}\r\n                                >\r\n                                    Submit\r\n                                </button>\r\n                                <Link to=\"/auth\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        id=\"kt_login_forgot_cancel\"\r\n                                        className=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ForgotPassword));\r\n"]},"metadata":{},"sourceType":"module"}
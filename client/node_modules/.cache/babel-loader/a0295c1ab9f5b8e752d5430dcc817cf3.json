{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar MockUtils = /*#__PURE__*/function () {\n  function MockUtils() {\n    _classCallCheck(this, MockUtils);\n  }\n\n  _createClass(MockUtils, [{\n    key: \"baseFilter\",\n\n    /**\r\n     * Filtration with sorting\r\n     * First do Sort then filter\r\n     *\r\n     * @param _entities: any[]\r\n     * @param _queryParams: QueryParamsModel\r\n     * @param _filtrationFields: string[]\r\n     */\n    value: function baseFilter(_entities, _queryParams) {\n      var _filtrationFields = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      // Filtration\n      var entitiesResult = this.searchInArray(_entities, _queryParams.filter, _filtrationFields); // Sorting\n      // start\n\n      if (_queryParams.sortField) {\n        entitiesResult = this.sortArray(entitiesResult, _queryParams.sortField, _queryParams.sortOrder);\n      } // end\n      // Paginator\n      // start\n\n\n      var pageNumber = _queryParams.pageNumber - 1;\n      var totalCount = entitiesResult.length;\n      var initialPos = pageNumber * _queryParams.pageSize;\n      entitiesResult = entitiesResult.slice(initialPos, initialPos + _queryParams.pageSize); // end\n\n      var queryResults = {\n        entities: entitiesResult,\n        totalCount: totalCount,\n        errorMessage: \"\"\n      };\n      return queryResults;\n    }\n    /**\r\n     * Sort array by field name and order-type\r\n     * @param _incomingArray: any[]\r\n     * @param _sortField: string\r\n     * @param _sortOrder: string\r\n     */\n\n  }, {\n    key: \"sortArray\",\n    value: function sortArray(_incomingArray) {\n      var _sortField = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n      var _sortOrder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"asc\";\n\n      if (!_sortField) {\n        return _incomingArray;\n      }\n\n      var result = [];\n      result = _incomingArray.sort(function (a, b) {\n        if (a[_sortField] < b[_sortField]) {\n          return _sortOrder === \"asc\" ? -1 : 1;\n        }\n\n        if (a[_sortField] > b[_sortField]) {\n          return _sortOrder === \"asc\" ? 1 : -1;\n        }\n\n        return 0;\n      });\n      return result;\n    }\n    /**\r\n     * Filter array by some fields\r\n     *\r\n     * @param _incomingArray: any[]\r\n     * @param _queryObj: any\r\n     * @param _filtrationFields: string[]\r\n     */\n\n  }, {\n    key: \"searchInArray\",\n    value: function searchInArray(_incomingArray, _queryObj) {\n      var _filtrationFields = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      var result = [];\n      var resultBuffer = [];\n      var indexes = [];\n      var firstIndexes = [];\n      var doSearch = false;\n\n      _filtrationFields.forEach(function (item) {\n        if (item in _queryObj) {\n          _incomingArray.forEach(function (element, index) {\n            if (element[item] === _queryObj[item]) {\n              firstIndexes.push(index);\n            }\n          });\n\n          firstIndexes.forEach(function (element) {\n            resultBuffer.push(_incomingArray[element]);\n          });\n          _incomingArray = resultBuffer.slice(0);\n          resultBuffer = [].slice(0);\n          firstIndexes = [].slice(0);\n        }\n      });\n\n      Object.keys(_queryObj).forEach(function (key) {\n        var searchText = _queryObj[key].toString().trim().toLowerCase();\n\n        if (key && !_filtrationFields.some(function (e) {\n          return e === key;\n        }) && searchText) {\n          doSearch = true;\n\n          try {\n            _incomingArray.forEach(function (element, index) {\n              if (element[key] || element[key] === 0 && searchText === \"0\") {\n                var _val = element[key].toString().trim().toLowerCase();\n\n                if (_val.indexOf(searchText) > -1 && indexes.indexOf(index) === -1) {\n                  indexes.push(index);\n                }\n              }\n            });\n          } catch (ex) {\n            console.log(ex, key, searchText);\n          }\n        }\n      });\n\n      if (!doSearch) {\n        return _incomingArray;\n      }\n\n      indexes.forEach(function (re) {\n        result.push(_incomingArray[re]);\n      });\n      return result;\n    }\n  }]);\n\n  return MockUtils;\n}();\n\nexport { MockUtils as default };","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/__mocks__/mock.utils.js"],"names":["MockUtils","_entities","_queryParams","_filtrationFields","entitiesResult","searchInArray","filter","sortField","sortArray","sortOrder","pageNumber","totalCount","length","initialPos","pageSize","slice","queryResults","entities","errorMessage","_incomingArray","_sortField","_sortOrder","result","sort","a","b","_queryObj","resultBuffer","indexes","firstIndexes","doSearch","forEach","item","element","index","push","Object","keys","key","searchText","toString","trim","toLowerCase","some","e","_val","indexOf","ex","console","log","re"],"mappings":"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","sourcesContent":["export default class MockUtils {\r\n  /**\r\n   * Filtration with sorting\r\n   * First do Sort then filter\r\n   *\r\n   * @param _entities: any[]\r\n   * @param _queryParams: QueryParamsModel\r\n   * @param _filtrationFields: string[]\r\n   */\r\n  baseFilter(_entities, _queryParams, _filtrationFields = []) {\r\n    // Filtration\r\n    let entitiesResult = this.searchInArray(\r\n      _entities,\r\n      _queryParams.filter,\r\n      _filtrationFields\r\n    );\r\n\r\n    // Sorting\r\n    // start\r\n    if (_queryParams.sortField) {\r\n      entitiesResult = this.sortArray(\r\n        entitiesResult,\r\n        _queryParams.sortField,\r\n        _queryParams.sortOrder\r\n      );\r\n    }\r\n    // end\r\n\r\n    // Paginator\r\n    // start\r\n    const pageNumber = _queryParams.pageNumber - 1;\r\n    const totalCount = entitiesResult.length;\r\n    const initialPos = pageNumber * _queryParams.pageSize;\r\n    entitiesResult = entitiesResult.slice(\r\n      initialPos,\r\n      initialPos + _queryParams.pageSize\r\n    );\r\n    // end\r\n\r\n    const queryResults = {\r\n      entities: entitiesResult,\r\n      totalCount: totalCount,\r\n      errorMessage: \"\"\r\n    };\r\n    return queryResults;\r\n  }\r\n\r\n  /**\r\n   * Sort array by field name and order-type\r\n   * @param _incomingArray: any[]\r\n   * @param _sortField: string\r\n   * @param _sortOrder: string\r\n   */\r\n  sortArray(_incomingArray, _sortField = \"\", _sortOrder = \"asc\") {\r\n    if (!_sortField) {\r\n      return _incomingArray;\r\n    }\r\n\r\n    let result = [];\r\n    result = _incomingArray.sort((a, b) => {\r\n      if (a[_sortField] < b[_sortField]) {\r\n        return _sortOrder === \"asc\" ? -1 : 1;\r\n      }\r\n\r\n      if (a[_sortField] > b[_sortField]) {\r\n        return _sortOrder === \"asc\" ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Filter array by some fields\r\n   *\r\n   * @param _incomingArray: any[]\r\n   * @param _queryObj: any\r\n   * @param _filtrationFields: string[]\r\n   */\r\n  searchInArray(_incomingArray, _queryObj, _filtrationFields = []) {\r\n    const result = [];\r\n    let resultBuffer = [];\r\n    const indexes = [];\r\n    let firstIndexes = [];\r\n    let doSearch = false;\r\n\r\n    _filtrationFields.forEach(item => {\r\n      if (item in _queryObj) {\r\n        _incomingArray.forEach((element, index) => {\r\n          if (element[item] === _queryObj[item]) {\r\n            firstIndexes.push(index);\r\n          }\r\n        });\r\n        firstIndexes.forEach(element => {\r\n          resultBuffer.push(_incomingArray[element]);\r\n        });\r\n        _incomingArray = resultBuffer.slice(0);\r\n        resultBuffer = [].slice(0);\r\n        firstIndexes = [].slice(0);\r\n      }\r\n    });\r\n\r\n    Object.keys(_queryObj).forEach(key => {\r\n      const searchText = _queryObj[key]\r\n        .toString()\r\n        .trim()\r\n        .toLowerCase();\r\n      if (key && !_filtrationFields.some(e => e === key) && searchText) {\r\n        doSearch = true;\r\n        try {\r\n          _incomingArray.forEach((element, index) => {\r\n            if (element[key] || (element[key] === 0 && searchText === \"0\")) {\r\n              const _val = element[key]\r\n                .toString()\r\n                .trim()\r\n                .toLowerCase();\r\n              if (\r\n                _val.indexOf(searchText) > -1 &&\r\n                indexes.indexOf(index) === -1\r\n              ) {\r\n                indexes.push(index);\r\n              }\r\n            }\r\n          });\r\n        } catch (ex) {\r\n          console.log(ex, key, searchText);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (!doSearch) {\r\n      return _incomingArray;\r\n    }\r\n\r\n    indexes.forEach(re => {\r\n      result.push(_incomingArray[re]);\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
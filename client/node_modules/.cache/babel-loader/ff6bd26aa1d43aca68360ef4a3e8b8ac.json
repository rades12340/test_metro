{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/App.js\";\n\n/**\r\n * Entry application component used to compose providers and render Routes.\r\n * */\nimport React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Routes } from \"../app/Routes\";\nimport { I18nProvider } from \"../_metronic/i18n\";\nimport { LayoutSplashScreen, MaterialThemeProvider } from \"../_metronic/layout\";\nexport default function App(_ref) {\n  var store = _ref.store,\n      persistor = _ref.persistor,\n      basename = _ref.basename;\n  return (\n    /*#__PURE__*/\n\n    /* Provide Redux store */\n    React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(PersistGate, {\n      persistor: persistor,\n      loading: /*#__PURE__*/React.createElement(LayoutSplashScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 51\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Suspense, {\n      fallback: /*#__PURE__*/React.createElement(LayoutSplashScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      basename: basename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MaterialThemeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(I18nProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    })))))))\n  );\n\n  var App = /*#__PURE__*/function (_Component) {\n    _inherits(App, _Component);\n\n    var _super = _createSuper(App);\n\n    function App() {\n      var _this;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {};\n      return _this;\n    }\n\n    _createClass(App, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        fetch(\"/api/auth/register\", {\n          method: \"POST\",\n          headers: {\n            \"content - Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: \"yazan@yazmakreitng.com\",\n            name: \"Yazan\",\n            password: \"Test123\",\n            password2: \"Test123\"\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          console.log(json);\n        });\n      }\n    }]);\n\n    return App;\n  }(Component);\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/App.js"],"names":["React","Component","Provider","BrowserRouter","PersistGate","Routes","I18nProvider","LayoutSplashScreen","MaterialThemeProvider","App","store","persistor","basename","state","fetch","method","headers","body","JSON","stringify","email","name","password","password2","then","res","json","console","log"],"mappings":";;;;;;AAAA;;;AAIA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,qBAA1D;AAEA,eAAe,SAASC,GAAT,OAA6C;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC1D;AAAA;;AACE;AACA,wBAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,SAAxB;AAAmC,MAAA,OAAO,eAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,eAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CAFF,CAFF,CAFF,CAFF;AAFF;;AAD0D,MAwBpDH,GAxBoD;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YAyBxDI,KAzBwD,GAyBhD,EAzBgD;AAAA;AAAA;;AAAA;AAAA;AAAA,0CA2BpC;AAClBC,QAAAA,KAAK,CAAC,oBAAD,EAAuB;AAC1BC,UAAAA,MAAM,EAAE,MADkB;AAE1BC,UAAAA,OAAO,EAAE;AACP,8BAAkB;AADX,WAFiB;AAK1BC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,KAAK,EAAC,wBADa;AAEnBC,YAAAA,IAAI,EAAE,OAFa;AAGnBC,YAAAA,QAAQ,EAAE,SAHS;AAInBC,YAAAA,SAAS,EAAE;AAJQ,WAAf;AALoB,SAAvB,CAAL,CAYKC,IAZL,CAYU,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SAZb,EAaKF,IAbL,CAaU,UAAAE,IAAI,EAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,SAfL;AAgBD;AA5CuD;;AAAA;AAAA,IAwBxCzB,SAxBwC;AA8C3D","sourcesContent":["/**\r\n * Entry application component used to compose providers and render Routes.\r\n * */\r\n\r\nimport React, {Component} from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { Routes } from \"../app/Routes\";\r\nimport { I18nProvider } from \"../_metronic/i18n\";\r\nimport { LayoutSplashScreen, MaterialThemeProvider } from \"../_metronic/layout\";\r\n\r\nexport default function App({ store, persistor, basename }) {\r\n  return (\r\n    /* Provide Redux store */\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor} loading={<LayoutSplashScreen />}>\r\n        {/* Add high level `Suspense` in case if was not handled inside the React tree. */}\r\n        <React.Suspense fallback={<LayoutSplashScreen />}>\r\n          {/* Override `basename` (e.g: `homepage` in `package.json`) */}\r\n          <BrowserRouter basename={basename}>\r\n            {/*This library only returns the location that has been active before the recent location change in the current window lifetime.*/}\r\n            <MaterialThemeProvider>\r\n              {/* Provide `react-intl` context synchronized with Redux state.  */}\r\n              <I18nProvider>\r\n                {/* Render routes with provided `Layout`. */}\r\n                <Routes />\r\n              </I18nProvider>\r\n            </MaterialThemeProvider>\r\n          </BrowserRouter>\r\n        </React.Suspense>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n\r\n  class App extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n      fetch(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content - Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          email:\"yazan@yazmakreitng.com\",\r\n          name: \"Yazan\",\r\n          password: \"Test123\",\r\n          password2: \"Test123\"\r\n        })\r\n      })\r\n          .then(res => res.json())\r\n          .then(json => {\r\n            console.log(json);\r\n          });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
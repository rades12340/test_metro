{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nimport { combineReducers } from \"redux\";\nimport * as auth from \"../app/modules/Auth/_redux/authRedux\";\nimport { customersSlice } from \"../app/modules/ECommerce/_redux/customers/customersSlice\";\nimport { productsSlice } from \"../app/modules/ECommerce/_redux/products/productsSlice\";\nimport { remarksSlice } from \"../app/modules/ECommerce/_redux/remarks/remarksSlice\";\nimport { specificationsSlice } from \"../app/modules/ECommerce/_redux/specifications/specificationsSlice\";\nexport var rootReducer = combineReducers({\n  auth: auth.reducer,\n  customers: customersSlice.reducer,\n  products: productsSlice.reducer,\n  remarks: remarksSlice.reducer,\n  specifications: specificationsSlice.reducer\n});\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([auth.saga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/redux/rootReducer.js"],"names":["rootSaga","all","combineReducers","auth","customersSlice","productsSlice","remarksSlice","specificationsSlice","rootReducer","reducer","customers","products","remarks","specifications","saga"],"mappings":";;oDAiBiBA,Q;;AAjBjB,SAAQC,GAAR,QAAkB,oBAAlB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,sCAAtB;AACA,SAAQC,cAAR,QAA6B,0DAA7B;AACA,SAAQC,aAAR,QAA4B,wDAA5B;AACA,SAAQC,YAAR,QAA2B,sDAA3B;AACA,SAAQC,mBAAR,QAAkC,oEAAlC;AAEA,OAAO,IAAMC,WAAW,GAAGN,eAAe,CAAC;AACzCC,EAAAA,IAAI,EAAEA,IAAI,CAACM,OAD8B;AAEzCC,EAAAA,SAAS,EAAEN,cAAc,CAACK,OAFe;AAGzCE,EAAAA,QAAQ,EAAEN,aAAa,CAACI,OAHiB;AAIzCG,EAAAA,OAAO,EAAEN,YAAY,CAACG,OAJmB;AAKzCI,EAAAA,cAAc,EAAEN,mBAAmB,CAACE;AALK,CAAD,CAAnC;AAQP,OAAO,SAAUT,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACW,IAAL,EAAD,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all} from \"redux-saga/effects\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nimport * as auth from \"../app/modules/Auth/_redux/authRedux\";\r\nimport {customersSlice} from \"../app/modules/ECommerce/_redux/customers/customersSlice\";\r\nimport {productsSlice} from \"../app/modules/ECommerce/_redux/products/productsSlice\";\r\nimport {remarksSlice} from \"../app/modules/ECommerce/_redux/remarks/remarksSlice\";\r\nimport {specificationsSlice} from \"../app/modules/ECommerce/_redux/specifications/specificationsSlice\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: auth.reducer,\r\n  customers: customersSlice.reducer,\r\n  products: productsSlice.reducer,\r\n  remarks: remarksSlice.reducer,\r\n  specifications: specificationsSlice.reducer\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([auth.saga()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
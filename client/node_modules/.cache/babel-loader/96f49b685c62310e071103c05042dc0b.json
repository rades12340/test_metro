{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js\";\n// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { getSelectRow, getHandlerTableChange, NoRecordsFoundMessage, PleaseWaitMessage, sortCaret } from \"../../../../../../_metronic/_helpers\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\nexport function SpecificationsTable() {\n  var _this = this;\n\n  // Specs UI Context\n  var specsUIContext = useSpecificationsUIContext();\n  var specsUIProps = useMemo(function () {\n    return {\n      queryParams: specsUIContext.queryParams,\n      setQueryParams: specsUIContext.setQueryParams,\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\n      openDeleteSpecificationDialog: specsUIContext.openDeleteSpecificationDialog,\n      ids: specsUIContext.ids,\n      setIds: specsUIContext.setIds,\n      productId: specsUIContext.productId\n    };\n  }, [specsUIContext]); // Specs Redux state\n  // Getting curret state of products list from store (Redux)\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      currentState: state.specifications\n    };\n  }, shallowEqual),\n      currentState = _useSelector.currentState;\n\n  var totalCount = currentState.totalCount,\n      entities = currentState.entities,\n      listLoading = currentState.listLoading;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    specsUIProps.setIds([]);\n    dispatch(actions.fetchSpecifications(specsUIProps.queryParams, specsUIProps.productId)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\n  var columns = [{\n    dataField: \"name\",\n    text: \"Specification Type\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"value\",\n    text: \"Value\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: ActionsColumnFormatter,\n    formatExtraData: {\n      openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\n      openDeleteSpecificationDialog: specsUIProps.openDeleteSpecificationDialog\n    },\n    classes: \"text-right pr-0\",\n    headerClasses: \"text-right pr-3\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }]; // Table pagination properties\n\n  var paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: specsUIProps.queryParams.pageSize,\n    page: specsUIProps.queryParams.pageNumber\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaginationProvider, {\n    pagination: paginationFactory(paginationOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var paginationProps = _ref.paginationProps,\n        paginationTableProps = _ref.paginationTableProps;\n    return /*#__PURE__*/React.createElement(Pagination, {\n      isLoading: listLoading,\n      paginationProps: paginationProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      wrapperClasses: \"table-responsive\",\n      classes: \"table table-head-custom table-vertical-center\",\n      bordered: false,\n      bootstrap4: true,\n      remote: true,\n      keyField: \"id\",\n      data: entities === null ? [] : entities,\n      columns: columns,\n      defaultSorted: uiHelpers.defaultSorted,\n      onTableChange: getHandlerTableChange(specsUIProps.setQueryParams),\n      selectRow: getSelectRow({\n        entities: entities,\n        ids: specsUIProps.ids,\n        setIds: specsUIProps.setIds\n      })\n    }, paginationTableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PleaseWaitMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NoRecordsFoundMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js"],"names":["React","useEffect","useMemo","shallowEqual","useDispatch","useSelector","BootstrapTable","paginationFactory","PaginationProvider","actions","ActionsColumnFormatter","uiHelpers","Pagination","getSelectRow","getHandlerTableChange","NoRecordsFoundMessage","PleaseWaitMessage","sortCaret","useSpecificationsUIContext","SpecificationsTable","specsUIContext","specsUIProps","queryParams","setQueryParams","openEditSpecificationDialog","openDeleteSpecificationDialog","ids","setIds","productId","state","currentState","specifications","totalCount","entities","listLoading","dispatch","fetchSpecifications","columns","dataField","text","sort","formatter","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","sizePerPageList","sizePerPage","pageSize","page","pageNumber","paginationProps","paginationTableProps","defaultSorted"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,IACEC,kBADF,QAEO,kCAFP;AAGA,OAAO,KAAKC,OAAZ,MAAyB,sDAAzB;AACA,SAASC,sBAAT,QAAuC,4CAAvC;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,gDAA3B;AACA,SACEC,YADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,iBAJF,EAKEC,SALF,QAMO,sCANP;AAOA,SAASC,0BAAT,QAA2C,2BAA3C;AAEA,OAAO,SAASC,mBAAT,GAA+B;AAAA;;AACpC;AACA,MAAMC,cAAc,GAAGF,0BAA0B,EAAjD;AACA,MAAMG,YAAY,GAAGnB,OAAO,CAAC,YAAM;AACjC,WAAO;AACLoB,MAAAA,WAAW,EAAEF,cAAc,CAACE,WADvB;AAELC,MAAAA,cAAc,EAAEH,cAAc,CAACG,cAF1B;AAGLC,MAAAA,2BAA2B,EAAEJ,cAAc,CAACI,2BAHvC;AAILC,MAAAA,6BAA6B,EAC3BL,cAAc,CAACK,6BALZ;AAMLC,MAAAA,GAAG,EAAEN,cAAc,CAACM,GANf;AAOLC,MAAAA,MAAM,EAAEP,cAAc,CAACO,MAPlB;AAQLC,MAAAA,SAAS,EAAER,cAAc,CAACQ;AARrB,KAAP;AAUD,GAX2B,EAWzB,CAACR,cAAD,CAXyB,CAA5B,CAHoC,CAgBpC;AACA;;AAjBoC,qBAkBXf,WAAW,CAClC,UAACwB,KAAD;AAAA,WAAY;AAAEC,MAAAA,YAAY,EAAED,KAAK,CAACE;AAAtB,KAAZ;AAAA,GADkC,EAElC5B,YAFkC,CAlBA;AAAA,MAkB5B2B,YAlB4B,gBAkB5BA,YAlB4B;;AAAA,MAsB5BE,UAtB4B,GAsBUF,YAtBV,CAsB5BE,UAtB4B;AAAA,MAsBhBC,QAtBgB,GAsBUH,YAtBV,CAsBhBG,QAtBgB;AAAA,MAsBNC,WAtBM,GAsBUJ,YAtBV,CAsBNI,WAtBM;AAuBpC,MAAMC,QAAQ,GAAG/B,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,YAAY,CAACM,MAAb,CAAoB,EAApB;AACAQ,IAAAA,QAAQ,CACN1B,OAAO,CAAC2B,mBAAR,CAA4Bf,YAAY,CAACC,WAAzC,EAAqDD,YAAY,CAACO,SAAlE,CADM,CAAR,CAFc,CAKd;AACD,GANQ,EAMN,CAACP,YAAY,CAACC,WAAd,EAA2Ba,QAA3B,EAAqCd,YAAY,CAACO,SAAlD,CANM,CAAT;AAQA,MAAMS,OAAO,GAAG,CACd;AACEC,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,IAAI,EAAE,oBAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEvB,IAAAA,SAAS,EAAEA;AAJb,GADc,EAOd;AACEqB,IAAAA,SAAS,EAAE,OADb;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEvB,IAAAA,SAAS,EAAEA;AAJb,GAPc,EAad;AACEqB,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEE,IAAAA,SAAS,EAAE/B,sBAHb;AAIEgC,IAAAA,eAAe,EAAE;AACflB,MAAAA,2BAA2B,EAAEH,YAAY,CAACG,2BAD3B;AAEfC,MAAAA,6BAA6B,EAC3BJ,YAAY,CAACI;AAHA,KAJnB;AASEkB,IAAAA,OAAO,EAAE,iBATX;AAUEC,IAAAA,aAAa,EAAE,iBAVjB;AAWEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AAXT,GAbc,CAAhB,CAhCoC,CA6DpC;;AACA,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,MAAM,EAAE,IADgB;AAExBC,IAAAA,SAAS,EAAEjB,UAFa;AAGxBkB,IAAAA,eAAe,EAAEvC,SAAS,CAACuC,eAHH;AAIxBC,IAAAA,WAAW,EAAE9B,YAAY,CAACC,WAAb,CAAyB8B,QAJd;AAKxBC,IAAAA,IAAI,EAAEhC,YAAY,CAACC,WAAb,CAAyBgC;AALP,GAA1B;AAOA,sBACE,uDACE,oBAAC,kBAAD;AAAoB,IAAA,UAAU,EAAE/C,iBAAiB,CAACwC,iBAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA+C;AAAA,QAA5CQ,eAA4C,QAA5CA,eAA4C;AAAA,QAA3BC,oBAA2B,QAA3BA,oBAA2B;AAC9C,wBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEtB,WADb;AAEE,MAAA,eAAe,EAAEqB,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,cAAD;AACE,MAAA,cAAc,EAAC,kBADjB;AAEE,MAAA,OAAO,EAAC,+CAFV;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,MAAM,MALR;AAME,MAAA,QAAQ,EAAC,IANX;AAOE,MAAA,IAAI,EAAEtB,QAAQ,KAAK,IAAb,GAAoB,EAApB,GAAyBA,QAPjC;AAQE,MAAA,OAAO,EAAEI,OARX;AASE,MAAA,aAAa,EAAE1B,SAAS,CAAC8C,aAT3B;AAUE,MAAA,aAAa,EAAE3C,qBAAqB,CAClCO,YAAY,CAACE,cADqB,CAVtC;AAaE,MAAA,SAAS,EAAEV,YAAY,CAAC;AACtBoB,QAAAA,QAAQ,EAARA,QADsB;AAEtBP,QAAAA,GAAG,EAAEL,YAAY,CAACK,GAFI;AAGtBC,QAAAA,MAAM,EAAEN,YAAY,CAACM;AAHC,OAAD;AAbzB,OAkBM6B,oBAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoBE,oBAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEvB,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eAqBE,oBAAC,qBAAD;AAAuB,MAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CAJF,CADF;AA8BD,GAhCH,CADF,CADF;AAsCD","sourcesContent":["// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsTable() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: specsUIContext.queryParams,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\r\n      openDeleteSpecificationDialog:\r\n        specsUIContext.openDeleteSpecificationDialog,\r\n      ids: specsUIContext.ids,\r\n      setIds: specsUIContext.setIds,\r\n      productId: specsUIContext.productId,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.specifications }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    specsUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Specification Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"Value\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\r\n        openDeleteSpecificationDialog:\r\n          specsUIProps.openDeleteSpecificationDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: specsUIProps.queryParams.pageSize,\r\n    page: specsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  specsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: specsUIProps.ids,\r\n                  setIds: specsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
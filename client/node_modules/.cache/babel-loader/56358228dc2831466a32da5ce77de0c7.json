{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nvar selectedCustomers = function selectedCustomers(entities, ids) {\n  var _customers = [];\n  ids.forEach(function (id) {\n    var customer = entities.find(function (el) {\n      return el.id === id;\n    });\n\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersFetchDialog(_ref) {\n  var _this = this;\n\n  var show = _ref.show,\n      onHide = _ref.onHide;\n  // Customers UI Context\n  var customersUIContext = useCustomersUIContext();\n  var customersUIProps = useMemo(function () {\n    return {\n      ids: customersUIContext.ids\n    };\n  }, [customersUIContext]); // Customers Redux state\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      customers: selectedCustomers(state.customers.entities, customersUIProps.ids)\n    };\n  }, shallowEqual),\n      customers = _useSelector.customers; // if customers weren't selected we should close modal\n\n\n  useEffect(function () {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [customersUIProps.ids]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Fetch selected elements\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline timeline-5 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, customers.map(function (customer) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-item align-items-start\",\n      key: \"id\".concat(customer.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-badge\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-genderless text-\".concat(CustomerStatusCssClasses[customer.status], \" icon-xxl\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-content text-dark-50 mr-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label label-lg label-light-\".concat(CustomerStatusCssClasses[customer.status], \" label-inline\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"ID: \", customer.id), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, customer.lastName, \", \", customer.firstName)));\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onHide,\n    className: \"btn btn-light btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onHide,\n    className: \"btn btn-primary btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Ok\"))));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js"],"names":["React","useEffect","useMemo","Modal","shallowEqual","useSelector","CustomerStatusCssClasses","useCustomersUIContext","selectedCustomers","entities","ids","_customers","forEach","id","customer","find","el","push","CustomersFetchDialog","show","onHide","customersUIContext","customersUIProps","state","customers","length","map","status","lastName","firstName"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersFetchDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"timeline timeline-5 mt-3\">\r\n          {customers.map((customer) => (\r\n            <div className=\"timeline-item align-items-start\" key={`id${customer.id}`}>\r\n              <div className=\"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\" />\r\n              <div className=\"timeline-badge\">\r\n                <i\r\n                  className={`fa fa-genderless text-${\r\n                    CustomerStatusCssClasses[customer.status]\r\n                  } icon-xxl`}\r\n                />\r\n              </div>\r\n              <div className=\"timeline-content text-dark-50 mr-5\">\r\n                <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    ID: {customer.id}\r\n                </span>\r\n                <span className=\"ml-3\">{customer.lastName}, {customer.firstName}</span>                \r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
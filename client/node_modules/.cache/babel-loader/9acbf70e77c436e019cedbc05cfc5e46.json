{"ast":null,"code":"import _slicedToArray from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/Auth/pages/Registration.js\";\nimport React, { Component, useState } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport { Input } from \"../../../../_metronic/_partials/controls\";\nimport * as auth from \"../_redux/authRedux\";\nimport { register } from \"../_redux/authCrud\";\n\nvar test = /*#__PURE__*/function (_Component) {\n  _inherits(test, _Component);\n\n  var _super = _createSuper(test);\n\n  function test() {\n    var _this;\n\n    _classCallCheck(this, test);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"content - Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: \"yazan@yazmakreitng.com\",\n          name: \"Yazan\",\n          password: \"Test123\",\n          password2: \"Test123\"\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n      });\n    }\n  }]);\n\n  return test;\n}(Component);\n\nfunction Registration(props) {\n  var _this2 = this;\n\n  var intl = props.intl;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n  };\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n  };\n\n  var getInputClasses = function getInputClasses(meta, fieldname) {\n    var result = \"form-control form-control-solid h-auto py-5 px-6 \";\n\n    if (meta.touched && meta.error) {\n      result += \" is-invalid\";\n    }\n\n    if (meta.touched && !meta.error) {\n      result += \" is-valid\";\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mb-10 mb-lg-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-size-h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.REGISTER.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Enter your details to create your account\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      fullname: \"\",\n      username: \"\",\n      password: \"\",\n      acceptTerms: true,\n      confirmPassword: \"\"\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.INVALID_FIELD\"\n        });\n      }\n\n      if (!values.fullname) {\n        errors.fullname = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      if (!values.username) {\n        errors.username = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      if (!values.password) {\n        errors.password = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      if (!values.confirmPassword) {\n        errors.confirmPassword = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      } else if (values.password !== values.confirmPassword) {\n        errors.confirmPassword = \"Password and Confirm Password didn't match.\";\n      }\n\n      if (!values.acceptTerms) {\n        errors.acceptTerms = \"Accept Terms\";\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      enableLoading();\n      register(values.email, values.fullname, values.username, values.password).then(function (_ref2) {\n        var accessToken = _ref2.data.accessToken;\n        props.register(accessToken);\n        disableLoading();\n      }).catch(function () {\n        setSubmitting(false);\n        setStatus(intl.formatMessage({\n          id: \"AUTH.VALIDATION.INVALID_LOGIN\"\n        }));\n        disableLoading();\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        status = _ref3.status,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"form\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, status && /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"mb-10 alert alert-custom alert-light-danger alert-dismissible\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text font-weight-bold\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"fullname\",\n      component: Input,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, function (_ref4) {\n      var field = _ref4.field,\n          form = _ref4.form,\n          meta = _ref4.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"text\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Enter Fullname\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 39\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      component: Input,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, function (_ref5) {\n      var field = _ref5.field,\n          form = _ref5.form,\n          meta = _ref5.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"email\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Enter email\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 39\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"username\",\n      component: Input,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, function (_ref6) {\n      var field = _ref6.field,\n          form = _ref6.form,\n          meta = _ref6.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"text\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Enter Username\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 39\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      component: Input,\n      placeholder: \"Password\",\n      label: \"Password\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, function (_ref7) {\n      var field = _ref7.field,\n          form = _ref7.form,\n          meta = _ref7.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"password\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Enter Password\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 39\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      component: Input,\n      placeholder: \"Confirm Password\",\n      label: \"Confirm Password\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, function (_ref8) {\n      var field = _ref8.field,\n          form = _ref8.form,\n          meta = _ref8.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"password\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Confirm Password\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 39\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      label: /*#__PURE__*/React.createElement(React.Fragment, null, \"I agree the\", \" \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/terms\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 23\n        }\n      }, \"Terms & Conditions\"), \".\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 23\n        }\n      })),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        color: \"primary\",\n        name: \"acceptTerms\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        checked: values.acceptTerms,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group d-flex flex-wrap flex-center\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting || !values.acceptTerms,\n      className: \"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(loading ? \"pr-3\" : \"\"),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }\n    }, \"Submit\"), loading && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border text-light\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/login\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }, \"Cancel\"))));\n  }));\n}\n\nexport default injectIntl(connect(null, auth.actions)(Registration));","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/Auth/pages/Registration.js"],"names":["React","Component","useState","Formik","Field","connect","Link","FormattedMessage","injectIntl","Checkbox","FormControlLabel","Input","auth","register","test","state","fetch","method","headers","body","JSON","stringify","email","name","password","password2","then","res","json","console","log","Registration","props","intl","loading","setLoading","enableLoading","disableLoading","getInputClasses","meta","fieldname","result","touched","error","fullname","username","acceptTerms","confirmPassword","values","errors","formatMessage","id","setStatus","setSubmitting","accessToken","data","catch","status","handleChange","handleBlur","handleSubmit","isSubmitting","field","form","actions"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport {Formik, Field} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport {Input} from \"../../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../_redux/authRedux\";\r\nimport {register} from \"../_redux/authCrud\";\r\n\r\nclass test extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    fetch(\"/api/auth/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content - Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email:\"yazan@yazmakreitng.com\",\r\n        name: \"Yazan\",\r\n        password: \"Test123\",\r\n        password2: \"Test123\"\r\n      })\r\n    })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          console.log(json);\r\n        });\r\n  }\r\n}\r\n\r\nfunction Registration(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (meta, fieldname) => {\r\n    let result = \"form-control form-control-solid h-auto py-5 px-6 \";\r\n    if (meta.touched && meta.error) {\r\n      result += \" is-invalid\"\r\n    }\r\n\r\n    if (meta.touched && !meta.error) {\r\n      result += \" is-valid\"\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  return (\r\n      <div className=\"login-form\">\r\n        <div className=\"text-center mb-10 mb-lg-20\">\r\n          <h3 className=\"font-size-h1\">\r\n            <FormattedMessage id=\"AUTH.REGISTER.TITLE\" />\r\n          </h3>\r\n          <p className=\"text-muted font-weight-bold\">Enter your details to create your account</p>\r\n        </div>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            fullname: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            acceptTerms: true,\r\n            confirmPassword: \"\"\r\n          }}\r\n\r\n          validate={values => {\r\n            const errors = {};\r\n\r\n            if (!values.email) {\r\n              errors.email = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.fullname) {\r\n              errors.fullname = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.username) {\r\n              errors.username = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.password) {\r\n              errors.password = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n              errors.confirmPassword = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            } else if (values.password !== values.confirmPassword) {\r\n              errors.confirmPassword =\r\n                \"Password and Confirm Password didn't match.\";\r\n            }\r\n\r\n            if (!values.acceptTerms) {\r\n              errors.acceptTerms = \"Accept Terms\";\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            register(\r\n              values.email,\r\n              values.fullname,\r\n              values.username,\r\n              values.password\r\n            )\r\n              .then(({ data: { accessToken } }) => {\r\n                props.register(accessToken);\r\n                disableLoading();\r\n              })\r\n              .catch(() => {\r\n                setSubmitting(false);\r\n                setStatus(\r\n                  intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n                  })\r\n                );\r\n                disableLoading();\r\n              });\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            status,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              className=\"form\"\r\n            >\r\n              {status && (\r\n                <div role=\"alert\" className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                  <div className=\"alert-text font-weight-bold\">{status}</div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group\">\r\n                {/* <TextField\r\n                  margin=\"normal\"\r\n                  label=\"Fullname\"\r\n                  className=\"form-control form-control-solid rounded\"\r\n                  name=\"fullname\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.fullname}\r\n                  helperText={touched.fullname && errors.fullname}\r\n                  error={Boolean(touched.fullname && errors.fullname)}\r\n                /> */}\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"fullname\"\r\n                  component={Input}\r\n                >\r\n                  {({ field, form, meta }) => (\r\n                      <div>\r\n                        <input\r\n                            type=\"text\" {...field}\r\n                            className={`${getInputClasses(meta)}`}\r\n                            placeholder=\"Enter Fullname\"/>\r\n                        {meta.touched &&\r\n                        meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                      </div>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                {/* <TextField\r\n                  label=\"Email\"\r\n                  margin=\"normal\"\r\n                  className=\"form-control form-control-solid rounded\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                  helperText={touched.email && errors.email}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                /> */}\r\n                <Field\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  component={Input}\r\n                >\r\n                  {({ field, form, meta }) => (\r\n                      <div>\r\n                        <input\r\n                            type=\"email\" {...field}\r\n                            className={`${getInputClasses(meta)}`}\r\n                            placeholder=\"Enter email\"/>\r\n                        {meta.touched &&\r\n                        meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                      </div>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                {/* <TextField\r\n                  margin=\"normal\"\r\n                  label=\"Username\"\r\n                  className=\"form-control form-control-solid rounded\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.username}\r\n                  helperText={touched.username && errors.username}\r\n                  error={Boolean(touched.username && errors.username)}\r\n                /> */}\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  component={Input}\r\n                >\r\n                  {({ field, form, meta }) => (\r\n                      <div>\r\n                        <input\r\n                            type=\"text\" {...field}\r\n                            className={`${getInputClasses(meta)}`}\r\n                            placeholder=\"Enter Username\"/>\r\n                        {meta.touched &&\r\n                        meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                      </div>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                {/* <TextField\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  label=\"Password\"\r\n                  className=\"form-control form-control-solid rounded\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.password}\r\n                  helperText={touched.password && errors.password}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                /> */}\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  component={Input}\r\n                  placeholder=\"Password\"\r\n                  label=\"Password\"\r\n                >\r\n                  {({ field, form, meta }) => (\r\n                      <div>\r\n                        <input\r\n                            type=\"password\" {...field}\r\n                            className={`${getInputClasses(meta)}`}\r\n                            placeholder=\"Enter Password\"/>\r\n                        {meta.touched &&\r\n                        meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                      </div>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                {/* <TextField\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  label=\"Confirm Password\"\r\n                  className=\"form-control form-control-solid rounded\"\r\n                  name=\"confirmPassword\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.confirmPassword}\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  error={Boolean(\r\n                    touched.confirmPassword && errors.confirmPassword\r\n                  )}\r\n                /> */}\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  component={Input}\r\n                  placeholder=\"Confirm Password\"\r\n                  label=\"Confirm Password\"\r\n                >\r\n                  {({ field, form, meta }) => (\r\n                      <div>\r\n                        <input\r\n                            type=\"password\" {...field}\r\n                            className={`${getInputClasses(meta)}`}\r\n                            placeholder=\"Confirm Password\"/>\r\n                        {meta.touched &&\r\n                        meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                      </div>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <FormControlLabel\r\n                  label={\r\n                    <>\r\n                      I agree the{\" \"}\r\n                      <Link\r\n                        to=\"/terms\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        Terms & Conditions\r\n                      </Link>.\r\n                      <span />\r\n                    </>\r\n                  }\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"acceptTerms\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      checked={values.acceptTerms}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group d-flex flex-wrap flex-center\">\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || !values.acceptTerms}\r\n                    className=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n                >\r\n                  <span className={`${loading ? \"pr-3\" : \"\"}`}>Submit</span>\r\n                  {loading && (\r\n                      <span className=\"spinner-border text-light\"></span>\r\n                  )}\r\n                </button>\r\n\r\n\r\n                <Link to=\"/auth/login\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </Link>\r\n\r\n\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(Registration));"]},"metadata":{},"sourceType":"module"}
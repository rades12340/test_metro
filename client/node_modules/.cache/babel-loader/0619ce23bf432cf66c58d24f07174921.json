{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ReactBootstrapExamples/ModalExamplesPage.js\";\nimport React from \"react\";\nimport { Button, Modal, ButtonToolbar, Col, Container, Row } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\n\nvar Example = /*#__PURE__*/function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example(props, context) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _super.call(this, props, context);\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.state = {\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, \"Launch demo modal\"), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"Save Changes\"))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nvar MyVerticallyCenteredModal = /*#__PURE__*/function (_React$Component2) {\n  _inherits(MyVerticallyCenteredModal, _React$Component2);\n\n  var _super2 = _createSuper(MyVerticallyCenteredModal);\n\n  function MyVerticallyCenteredModal() {\n    _classCallCheck(this, MyVerticallyCenteredModal);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(MyVerticallyCenteredModal, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Modal, Object.assign({}, this.props, {\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Centered Modal\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.props.onHide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"Close\")));\n    }\n  }]);\n\n  return MyVerticallyCenteredModal;\n}(React.Component);\n\nvar App = /*#__PURE__*/function (_React$Component3) {\n  _inherits(App, _React$Component3);\n\n  var _super3 = _createSuper(App);\n\n  function App() {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super3.call.apply(_super3, [this].concat(args));\n    _this2.state = {\n      modalShow: false\n    };\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var modalClose = function modalClose() {\n        return _this3.setState({\n          modalShow: false\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: function onClick() {\n          return _this3.setState({\n            modalShow: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"Launch vertically centered modal\"), /*#__PURE__*/React.createElement(MyVerticallyCenteredModal, {\n        show: this.state.modalShow,\n        onHide: modalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar MydModalWithGrid = /*#__PURE__*/function (_React$Component4) {\n  _inherits(MydModalWithGrid, _React$Component4);\n\n  var _super4 = _createSuper(MydModalWithGrid);\n\n  function MydModalWithGrid() {\n    _classCallCheck(this, MydModalWithGrid);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(MydModalWithGrid, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Modal, Object.assign({}, this.props, {\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"Using Grid in Modal\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"show-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        md: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, \".col-xs-12 .col-md-8\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \".col-xs-6 .col-md-4\"))), /*#__PURE__*/React.createElement(Row, {\n        className: \"show-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, \".col-xs-6 .col-md-4\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \".col-xs-6 .col-md-4\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, \".col-xs-6 .col-md-4\"))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.props.onHide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, \"Close\")));\n    }\n  }]);\n\n  return MydModalWithGrid;\n}(React.Component);\n\nvar App1 = /*#__PURE__*/function (_React$Component5) {\n  _inherits(App1, _React$Component5);\n\n  var _super5 = _createSuper(App1);\n\n  function App1() {\n    var _this4;\n\n    _classCallCheck(this, App1);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this4 = _super5.call.apply(_super5, [this].concat(args));\n    _this4.state = {\n      modalShow: false\n    };\n    return _this4;\n  }\n\n  _createClass(App1, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var modalClose = function modalClose() {\n        return _this5.setState({\n          modalShow: false\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            modalShow: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, \"Launch modal with grid\"), /*#__PURE__*/React.createElement(MydModalWithGrid, {\n        show: this.state.modalShow,\n        onHide: modalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App1;\n}(React.Component);\n\nvar Example1 = /*#__PURE__*/function (_React$Component6) {\n  _inherits(Example1, _React$Component6);\n\n  var _super6 = _createSuper(Example1);\n\n  function Example1(props, context) {\n    var _this6;\n\n    _classCallCheck(this, Example1);\n\n    _this6 = _super6.call(this, props, context);\n    _this6.state = {\n      smShow: false,\n      lgShow: false\n    };\n    return _this6;\n  }\n\n  _createClass(Example1, [{\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var smClose = function smClose() {\n        return _this7.setState({\n          smShow: false\n        });\n      };\n\n      var lgClose = function lgClose() {\n        return _this7.setState({\n          lgShow: false\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return _this7.setState({\n            smShow: true\n          });\n        },\n        className: \"pr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }, \"Small modal\"), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return _this7.setState({\n            lgShow: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, \"Large modal\"), /*#__PURE__*/React.createElement(Modal, {\n        size: \"sm\",\n        show: this.state.smShow,\n        onHide: smClose,\n        \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        id: \"example-modal-sizes-title-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, \"Small Modal\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, \"...\")), /*#__PURE__*/React.createElement(Modal, {\n        size: \"lg\",\n        show: this.state.lgShow,\n        onHide: lgClose,\n        \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        id: \"example-modal-sizes-title-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, \"Large Modal\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, \"...\")));\n    }\n  }]);\n\n  return Example1;\n}(React.Component);\n\nvar Example2 = /*#__PURE__*/function (_React$Component7) {\n  _inherits(Example2, _React$Component7);\n\n  var _super7 = _createSuper(Example2);\n\n  function Example2(props, context) {\n    var _this8;\n\n    _classCallCheck(this, Example2);\n\n    _this8 = _super7.call(this, props, context);\n    _this8.state = {\n      show: false\n    };\n\n    _this8.handleShow = function () {\n      _this8.setState({\n        show: true\n      });\n    };\n\n    _this8.handleHide = function () {\n      _this8.setState({\n        show: false\n      });\n    };\n\n    return _this8;\n  }\n\n  _createClass(Example2, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, \"Custom Width Modal\"), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleHide,\n        dialogClassName: \"modal-90w\",\n        \"aria-labelledby\": \"example-custom-modal-styling-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        id: \"example-custom-modal-styling-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, \"Custom Modal Styling\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }, \"Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae unde commodi aspernatur enim, consectetur. Cumque deleniti temporibus ipsam atque a dolores quisquam quisquam adipisci possimus laboriosam. Quibusdam facilis doloribus debitis! Sit quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem! Mollitia reiciendis porro quo magni incidunt dolore amet atque facilis ipsum deleniti rem!\"))));\n    }\n  }]);\n\n  return Example2;\n}(React.Component);\n\nvar ModalExamplesPage = /*#__PURE__*/function (_React$Component8) {\n  _inherits(ModalExamplesPage, _React$Component8);\n\n  var _super8 = _createSuper(ModalExamplesPage);\n\n  function ModalExamplesPage() {\n    _classCallCheck(this, ModalExamplesPage);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(ModalExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, \"Add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/modal/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Static Markup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, \"Below is a static modal dialog (without the positioning) to demostrate the look and feel of the Modal.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Dialog, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 19\n        }\n      }, \"Modal title\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 19\n        }\n      }, \"Modal body text goes here.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 19\n        }\n      }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 19\n        }\n      }, \"Save changes\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Vertically centered\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }\n      }, \"You can vertically center a modal by passing the \\\"centered\\\" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(App, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode6,\n        beforeCodeTitle: \"Sizing modals using custom CSS\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }\n      }, \"You can apply custom css to the modal dialog div using the \\\"dialogClassName\\\" prop. Example is using a custom css class with width set to 90%.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Example2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Live demo\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }\n      }, \"A modal with header, body, and set of actions in the footer.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Example, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Optional Sizes\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }, \"You can specify a bootstrap large or small modal by using the \\\"size\\\" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Example1, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Using the grid\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }\n      }, \"You can use grid layouts within a model using regular grid components inside the modal content.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(App1, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return ModalExamplesPage;\n}(React.Component);\n\nexport { ModalExamplesPage as default };\nvar jsCode1 = \"\\n<Modal.Dialog>\\n  <Modal.Header closeButton>\\n    <Modal.Title>Modal title</Modal.Title>\\n  </Modal.Header>\\n\\n  <Modal.Body>\\n    <p>Modal body text goes here.</p>\\n  </Modal.Body>\\n\\n  <Modal.Footer>\\n    <Button variant=\\\"secondary\\\">Close</Button>\\n    <Button variant=\\\"primary\\\">Save changes</Button>\\n  </Modal.Footer>\\n</Modal.Dialog>\\n\";\nvar jsCode2 = \"\\nclass Example extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleShow = this.handleShow.bind(this);\\n    this.handleClose = this.handleClose.bind(this);\\n\\n    this.state = {\\n      show: false,\\n    };\\n  }\\n\\n  handleClose() {\\n    this.setState({ show: false });\\n  }\\n\\n  handleShow() {\\n    this.setState({ show: true });\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <Button variant=\\\"primary\\\" onClick={this.handleShow}>\\n          Launch demo modal\\n        </Button>\\n\\n        <Modal show={this.state.show} onHide={this.handleClose}>\\n          <Modal.Header closeButton>\\n            <Modal.Title>Modal heading</Modal.Title>\\n          </Modal.Header>\\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\\n          <Modal.Footer>\\n            <Button variant=\\\"secondary\\\" onClick={this.handleClose}>\\n              Close\\n            </Button>\\n            <Button variant=\\\"primary\\\" onClick={this.handleClose}>\\n              Save Changes\\n            </Button>\\n          </Modal.Footer>\\n        </Modal>\\n      </>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";\nvar jsCode3 = \"\\nclass MyVerticallyCenteredModal extends React.Component {\\n  render() {\\n    return (\\n      <Modal\\n        {...this.props}\\n        size=\\\"lg\\\"\\n        aria-labelledby=\\\"contained-modal-title-vcenter\\\"\\n        centered\\n      >\\n        <Modal.Header closeButton>\\n          <Modal.Title id=\\\"contained-modal-title-vcenter\\\">\\n            Modal heading\\n          </Modal.Title>\\n        </Modal.Header>\\n        <Modal.Body>\\n          <h4>Centered Modal</h4>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n        </Modal.Body>\\n        <Modal.Footer>\\n          <Button onClick={this.props.onHide}>Close</Button>\\n        </Modal.Footer>\\n      </Modal>\\n    );\\n  }\\n}\\n\\nclass App extends React.Component {\\n  constructor(...args) {\\n    super(...args);\\n\\n    this.state = { modalShow: false };\\n  }\\n\\n  render() {\\n    let modalClose = () => this.setState({ modalShow: false });\\n\\n    return (\\n      <ButtonToolbar>\\n        <Button\\n          variant=\\\"primary\\\"\\n          onClick={() => this.setState({ modalShow: true })}\\n        >\\n          Launch vertically centered modal\\n        </Button>\\n\\n        <MyVerticallyCenteredModal\\n          show={this.state.modalShow}\\n          onHide={modalClose}\\n        />\\n      </ButtonToolbar>\\n    );\\n  }\\n}\\n\\nrender(<App />);\\n\";\nvar jsCode4 = \"\\nclass MydModalWithGrid extends React.Component {\\n  render() {\\n    return (\\n      <Modal {...this.props} aria-labelledby=\\\"contained-modal-title-vcenter\\\">\\n        <Modal.Header closeButton>\\n          <Modal.Title id=\\\"contained-modal-title-vcenter\\\">\\n            Using Grid in Modal\\n          </Modal.Title>\\n        </Modal.Header>\\n        <Modal.Body>\\n          <Container>\\n            <Row className=\\\"show-grid\\\">\\n              <Col xs={12} md={8}>\\n                <code>.col-xs-12 .col-md-8</code>\\n              </Col>\\n              <Col xs={6} md={4}>\\n                <code>.col-xs-6 .col-md-4</code>\\n              </Col>\\n            </Row>\\n\\n            <Row className=\\\"show-grid\\\">\\n              <Col xs={6} md={4}>\\n                <code>.col-xs-6 .col-md-4</code>\\n              </Col>\\n              <Col xs={6} md={4}>\\n                <code>.col-xs-6 .col-md-4</code>\\n              </Col>\\n              <Col xs={6} md={4}>\\n                <code>.col-xs-6 .col-md-4</code>\\n              </Col>\\n            </Row>\\n          </Container>\\n        </Modal.Body>\\n        <Modal.Footer>\\n          <Button onClick={this.props.onHide}>Close</Button>\\n        </Modal.Footer>\\n      </Modal>\\n    );\\n  }\\n}\\n\\nclass App extends React.Component {\\n  constructor(...args) {\\n    super(...args);\\n\\n    this.state = { modalShow: false };\\n  }\\n\\n  render() {\\n    let modalClose = () => this.setState({ modalShow: false });\\n\\n    return (\\n      <ButtonToolbar>\\n        <Button\\n          variant=\\\"primary\\\"\\n          onClick={() => this.setState({ modalShow: true })}\\n        >\\n          Launch modal with grid\\n        </Button>\\n\\n        <MydModalWithGrid show={this.state.modalShow} onHide={modalClose} />\\n      </ButtonToolbar>\\n    );\\n  }\\n}\\n\\nrender(<App />);\\n\";\nvar jsCode5 = \"\\nclass Example extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.state = {\\n      smShow: false,\\n      lgShow: false,\\n    };\\n  }\\n\\n  render() {\\n    let smClose = () => this.setState({ smShow: false });\\n    let lgClose = () => this.setState({ lgShow: false });\\n\\n    return (\\n      <ButtonToolbar>\\n        <Button onClick={() => this.setState({ smShow: true })}>\\n          Small modal\\n        </Button>\\n        <Button onClick={() => this.setState({ lgShow: true })}>\\n          Large modal\\n        </Button>\\n\\n        <Modal\\n          size=\\\"sm\\\"\\n          show={this.state.smShow}\\n          onHide={smClose}\\n          aria-labelledby=\\\"example-modal-sizes-title-sm\\\"\\n        >\\n          <Modal.Header closeButton>\\n            <Modal.Title id=\\\"example-modal-sizes-title-sm\\\">\\n              Small Modal\\n            </Modal.Title>\\n          </Modal.Header>\\n          <Modal.Body>...</Modal.Body>\\n        </Modal>\\n\\n        <Modal\\n          size=\\\"lg\\\"\\n          show={this.state.lgShow}\\n          onHide={lgClose}\\n          aria-labelledby=\\\"example-modal-sizes-title-lg\\\"\\n        >\\n          <Modal.Header closeButton>\\n            <Modal.Title id=\\\"example-modal-sizes-title-lg\\\">\\n              Large Modal\\n            </Modal.Title>\\n          </Modal.Header>\\n          <Modal.Body>...</Modal.Body>\\n        </Modal>\\n      </ButtonToolbar>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";\nvar jsCode6 = \"\\nclass Example extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.state = {\\n      show: false,\\n    };\\n\\n    this.handleShow = () => {\\n      this.setState({ show: true });\\n    };\\n\\n    this.handleHide = () => {\\n      this.setState({ show: false });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <Button variant=\\\"primary\\\" onClick={this.handleShow}>\\n          Custom Width Modal\\n        </Button>\\n\\n        <Modal\\n          show={this.state.show}\\n          onHide={this.handleHide}\\n          dialogClassName=\\\"modal-90w\\\"\\n          aria-labelledby=\\\"example-custom-modal-styling-title\\\"\\n        >\\n          <Modal.Header closeButton>\\n            <Modal.Title id=\\\"example-custom-modal-styling-title\\\">\\n              Custom Modal Styling\\n            </Modal.Title>\\n          </Modal.Header>\\n          <Modal.Body>\\n            <p>\\n              Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae\\n              unde commodi aspernatur enim, consectetur. Cumque deleniti\\n              temporibus ipsam atque a dolores quisquam quisquam adipisci\\n              possimus laboriosam. Quibusdam facilis doloribus debitis! Sit\\n              quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem!\\n              Mollitia reiciendis porro quo magni incidunt dolore amet atque\\n              facilis ipsum deleniti rem!\\n            </p>\\n          </Modal.Body>\\n        </Modal>\\n      </>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ReactBootstrapExamples/ModalExamplesPage.js"],"names":["React","Button","Modal","ButtonToolbar","Col","Container","Row","Notice","KTCodeExample","Example","props","context","handleShow","bind","handleClose","state","show","setState","Component","MyVerticallyCenteredModal","onHide","App","args","modalShow","modalClose","MydModalWithGrid","App1","Example1","smShow","lgShow","smClose","lgClose","Example2","handleHide","ModalExamplesPage","jsCode1","jsCode3","jsCode6","jsCode2","jsCode5","jsCode4"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ButtonToolbar,\r\n  Col,\r\n  Container,\r\n  Row\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Launch demo modal\r\n        </Button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Modal heading\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch vertically centered modal\r\n        </Button>\r\n\r\n        <MyVerticallyCenteredModal\r\n          show={this.state.modalShow}\r\n          onHide={modalClose}\r\n        />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass MydModalWithGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal {...this.props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Using Grid in Modal\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row className=\"show-grid\">\r\n              <Col xs={12} md={8}>\r\n                <code>.col-xs-12 .col-md-8</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"show-grid\">\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App1 extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch modal with grid\r\n        </Button>\r\n\r\n        <MydModalWithGrid show={this.state.modalShow} onHide={modalClose} />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      smShow: false,\r\n      lgShow: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let smClose = () => this.setState({ smShow: false });\r\n    let lgClose = () => this.setState({ lgShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          onClick={() => this.setState({ smShow: true })}\r\n          className=\"pr-3\"\r\n        >\r\n          Small modal\r\n        </Button>\r\n        &nbsp;\r\n        <Button onClick={() => this.setState({ lgShow: true })}>\r\n          Large modal\r\n        </Button>\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.smShow}\r\n          onHide={smClose}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n              Small Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n        <Modal\r\n          size=\"lg\"\r\n          show={this.state.lgShow}\r\n          onHide={lgClose}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Large Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example2 extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n\r\n    this.handleShow = () => {\r\n      this.setState({ show: true });\r\n    };\r\n\r\n    this.handleHide = () => {\r\n      this.setState({ show: false });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Custom Width Modal\r\n        </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleHide}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Custom Modal Styling\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae\r\n              unde commodi aspernatur enim, consectetur. Cumque deleniti\r\n              temporibus ipsam atque a dolores quisquam quisquam adipisci\r\n              possimus laboriosam. Quibusdam facilis doloribus debitis! Sit\r\n              quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem!\r\n              Mollitia reiciendis porro quo magni incidunt dolore amet atque\r\n              facilis ipsum deleniti rem!\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ModalExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Add dialogs to your site for lightboxes, user notifications, or\r\n            completely custom content.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/modal/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Static Markup\">\r\n              <span>\r\n                Below is a static modal dialog (without the positioning) to\r\n                demostrate the look and feel of the Modal.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Modal.Dialog>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                  <p>Modal body text goes here.</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                  <Button variant=\"secondary\">Close</Button>\r\n                  <Button variant=\"primary\">Save changes</Button>\r\n                </Modal.Footer>\r\n              </Modal.Dialog>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Vertically centered\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can vertically center a modal by passing the \"centered\"\r\n                prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <App />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode6}\r\n              beforeCodeTitle=\"Sizing modals using custom CSS\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can apply custom css to the modal dialog div using the\r\n                \"dialogClassName\" prop. Example is using a custom css class with\r\n                width set to 90%.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example2 />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Live demo\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                A modal with header, body, and set of actions in the footer.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example />\r\n            </KTCodeExample>\r\n            <KTCodeExample\r\n              jsCode={jsCode5}\r\n              beforeCodeTitle=\"Optional Sizes\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can specify a bootstrap large or small modal by using the\r\n                \"size\" prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example1 />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Using the grid\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                You can use grid layouts within a model using regular grid\r\n                components inside the modal content.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <App1 />\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Modal.Dialog>\r\n  <Modal.Header closeButton>\r\n    <Modal.Title>Modal title</Modal.Title>\r\n  </Modal.Header>\r\n\r\n  <Modal.Body>\r\n    <p>Modal body text goes here.</p>\r\n  </Modal.Body>\r\n\r\n  <Modal.Footer>\r\n    <Button variant=\"secondary\">Close</Button>\r\n    <Button variant=\"primary\">Save changes</Button>\r\n  </Modal.Footer>\r\n</Modal.Dialog>\r\n`;\r\nconst jsCode2 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Launch demo modal\r\n        </Button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Modal heading\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch vertically centered modal\r\n        </Button>\r\n\r\n        <MyVerticallyCenteredModal\r\n          show={this.state.modalShow}\r\n          onHide={modalClose}\r\n        />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />);\r\n`;\r\nconst jsCode4 = `\r\nclass MydModalWithGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal {...this.props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Using Grid in Modal\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row className=\"show-grid\">\r\n              <Col xs={12} md={8}>\r\n                <code>.col-xs-12 .col-md-8</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"show-grid\">\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <code>.col-xs-6 .col-md-4</code>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.state = { modalShow: false };\r\n  }\r\n\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => this.setState({ modalShow: true })}\r\n        >\r\n          Launch modal with grid\r\n        </Button>\r\n\r\n        <MydModalWithGrid show={this.state.modalShow} onHide={modalClose} />\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />);\r\n`;\r\nconst jsCode5 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      smShow: false,\r\n      lgShow: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let smClose = () => this.setState({ smShow: false });\r\n    let lgClose = () => this.setState({ lgShow: false });\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={() => this.setState({ smShow: true })}>\r\n          Small modal\r\n        </Button>\r\n        <Button onClick={() => this.setState({ lgShow: true })}>\r\n          Large modal\r\n        </Button>\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.smShow}\r\n          onHide={smClose}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n              Small Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          size=\"lg\"\r\n          show={this.state.lgShow}\r\n          onHide={lgClose}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Large Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode6 = `\r\nclass Example extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n\r\n    this.handleShow = () => {\r\n      this.setState({ show: true });\r\n    };\r\n\r\n    this.handleHide = () => {\r\n      this.setState({ show: false });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Custom Width Modal\r\n        </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleHide}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Custom Modal Styling\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae\r\n              unde commodi aspernatur enim, consectetur. Cumque deleniti\r\n              temporibus ipsam atque a dolores quisquam quisquam adipisci\r\n              possimus laboriosam. Quibusdam facilis doloribus debitis! Sit\r\n              quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem!\r\n              Mollitia reiciendis porro quo magni incidunt dolore amet atque\r\n              facilis ipsum deleniti rem!\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
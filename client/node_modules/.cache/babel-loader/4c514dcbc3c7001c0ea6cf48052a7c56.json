{"ast":null,"code":"import _slicedToArray from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/Auth/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Input } from \"../../../../_metronic/_partials/controls\";\nimport * as auth from \"../_redux/authRedux\";\nimport { login } from \"../_redux/authCrud\";\n\nfunction Login(props) {\n  var _this = this;\n\n  var intl = props.intl;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n  };\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n  };\n\n  var getInputClasses = function getInputClasses(meta, fieldname) {\n    var result = \"form-control form-control-solid h-auto py-5 px-6 \";\n\n    if (meta.touched && meta.error) {\n      result += \" is-invalid\";\n    }\n\n    if (meta.touched && !meta.error) {\n      result += \" is-valid\";\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form login-signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mb-10 mb-lg-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-size-h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.LOGIN.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Enter your username and password\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"admin@demo.com\",\n      password: \"demo\"\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        // https://github.com/formatjs/react-intl/blob/master/docs/API.md#injection-api\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.INVALID_FIELD\"\n        });\n      }\n\n      if (!values.password) {\n        errors.password = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      enableLoading();\n      setTimeout(function () {\n        login(values.email, values.password).then(function (_ref2) {\n          var accessToken = _ref2.data.accessToken;\n          disableLoading();\n          props.login(accessToken);\n        }).catch(function () {\n          disableLoading();\n          setSubmitting(false);\n          setStatus(intl.formatMessage({\n            id: \"AUTH.VALIDATION.INVALID_LOGIN\"\n          }));\n        });\n      }, 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        status = _ref3.status,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"mb-10 alert alert-custom alert-light-danger alert-dismissible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"mb-10 alert alert-custom alert-light-info alert-dismissible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text \",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, \"Use account \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, \"admin@demo.com\"), \" and password\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"demo\"), \" to continue.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      component: Input,\n      placeholder: \"Email\",\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, function (_ref4) {\n      var field = _ref4.field,\n          form = _ref4.form,\n          meta = _ref4.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"email\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Enter Email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      placeholder: \"Password\",\n      label: \"Password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, function (_ref5) {\n      var field = _ref5.field,\n          form = _ref5.form,\n          meta = _ref5.meta;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"password\"\n      }, field, {\n        className: \"\".concat(getInputClasses(meta)),\n        placeholder: \"Enter Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 27\n        }\n      })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 41\n        }\n      }, meta.error));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group d-flex flex-wrap justify-content-between align-items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/forgot-password\",\n      className: \"text-dark-50 text-hover-primary my-3 mr-2\",\n      id: \"kt_login_forgot\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"AUTH.GENERAL.FORGOT_BUTTON\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"kt_login_signin_submit\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      className: \"btn btn-primary font-weight-bold px-9 py-4 my-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(loading ? \"pr-3\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), loading && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border text-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }))));\n  }));\n}\n\nexport default injectIntl(connect(null, auth.actions)(Login));","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/Auth/pages/Login.js"],"names":["React","useState","Link","Formik","Field","connect","FormattedMessage","injectIntl","Input","auth","login","Login","props","intl","loading","setLoading","enableLoading","disableLoading","getInputClasses","meta","fieldname","result","touched","error","email","password","values","errors","formatMessage","id","test","setStatus","setSubmitting","setTimeout","then","accessToken","data","catch","status","handleChange","handleBlur","handleSubmit","isSubmitting","field","form","actions"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Formik, Field} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\nimport {Input} from \"../../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../_redux/authRedux\";\r\nimport {login} from \"../_redux/authCrud\";\r\n\r\nfunction Login(props) {\r\n  const {intl} = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (meta, fieldname) => {\r\n    let result = \"form-control form-control-solid h-auto py-5 px-6 \";\r\n    if (meta.touched && meta.error) {\r\n      result += \" is-invalid\"\r\n    }\r\n\r\n    if (meta.touched && !meta.error) {\r\n      result += \" is-valid\"\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  return (\r\n      <div className=\"login-form login-signin\">\r\n        {/* begin::Head */}\r\n        <div className=\"text-center mb-10 mb-lg-20\">\r\n          {/* https://github.com/formatjs/react-intl/blob/master/docs/Components.md#formattedmessage */}\r\n          <h3 className=\"font-size-h1\"><FormattedMessage id=\"AUTH.LOGIN.TITLE\"/></h3>\r\n          <p className=\"text-muted font-weight-bold\">Enter your username and password</p>\r\n        </div>\r\n        {/* end::Head */}\r\n\r\n        {/*begin::Form*/}\r\n\r\n        <Formik\r\n            initialValues={{\r\n              email: \"admin@demo.com\",\r\n              password: \"demo\"\r\n            }}\r\n            validate={values => {\r\n              const errors = {};\r\n\r\n              if (!values.email) {\r\n                // https://github.com/formatjs/react-intl/blob/master/docs/API.md#injection-api\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              } else if (\r\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n              ) {\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n                });\r\n              }\r\n\r\n              if (!values.password) {\r\n                errors.password = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n\r\n              return errors;\r\n            }}\r\n            onSubmit={(values, {setStatus, setSubmitting}) => {\r\n              enableLoading();\r\n              setTimeout(() => {\r\n                login(values.email, values.password)\r\n                    .then(({data: {accessToken}}) => {\r\n                      disableLoading();\r\n                      props.login(accessToken);\r\n                    })\r\n                    .catch(() => {\r\n                      disableLoading();\r\n                      setSubmitting(false);\r\n                      setStatus(\r\n                          intl.formatMessage({\r\n                            id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n                          })\r\n                      );\r\n                    });\r\n              }, 1000);\r\n            }}\r\n        >\r\n          {({\r\n              values,\r\n              status,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting\r\n            }) => (\r\n              <form\r\n                  className=\"form\"\r\n                  noValidate={true}\r\n                  autoComplete=\"off\"\r\n                  onSubmit={handleSubmit}\r\n              >\r\n                {status ? (\r\n                    <div role=\"alert\" className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                      <div className=\"alert-text font-weight-bold\">{status}</div>\r\n                    </div>\r\n                ) : (\r\n                    <div role=\"alert\" className=\"mb-10 alert alert-custom alert-light-info alert-dismissible\">\r\n                      <div className=\"alert-text \">\r\n                        Use account <strong>admin@demo.com</strong> and password{\" \"}\r\n                        <strong>demo</strong> to continue.\r\n                      </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"form-group\">\r\n                  {/* <TextField\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    margin=\"normal\"\r\n                    className=\"form-control form-control-solid rounded\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    helperText={touched.email && errors.email}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                  /> */}\r\n                  <Field\r\n                      name=\"email\"\r\n                      component={Input}\r\n                      placeholder=\"Email\"\r\n                      label=\"Email\"\r\n                  >\r\n                    {({ field, form, meta }) => (\r\n                        <div>\r\n                          <input\r\n                              type=\"email\" {...field}\r\n                              className={`${getInputClasses(meta)}`}\r\n                              placeholder=\"Enter Email\"/>\r\n                          {meta.touched &&\r\n                          meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                        </div>\r\n                    )}\r\n                  </Field>\r\n\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                      name=\"password\"\r\n                      component={Input}\r\n                      placeholder=\"Password\"\r\n                      label=\"Password\"\r\n                  >\r\n                    {({ field, form, meta }) => (\r\n                        <div>\r\n                          <input\r\n                              type=\"password\" {...field}\r\n                              className={`${getInputClasses(meta)}`}\r\n                              placeholder=\"Enter Password\"/>\r\n                          {meta.touched &&\r\n                          meta.error && <div className=\"error invalid-feedback\">{meta.error}</div>}\r\n                        </div>\r\n                    )}\r\n                  </Field>\r\n                  {/* <TextField\r\n                    type=\"password\"\r\n                    margin=\"normal\"\r\n                    label=\"Password\"\r\n                    className=\"form-control form-control-solid text-dark rounded\"\r\n                    name=\"password\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    helperText={touched.password && errors.password}\r\n                    error={Boolean(touched.password && errors.password)}\r\n                  /> */}\r\n                </div>\r\n\r\n                {/* begin::Actions */}\r\n                <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <Link to=\"/auth/forgot-password\" className=\"text-dark-50 text-hover-primary my-3 mr-2\" id=\"kt_login_forgot\">\r\n                    <FormattedMessage id=\"AUTH.GENERAL.FORGOT_BUTTON\"/>\r\n                  </Link>\r\n\r\n                  <button\r\n                      id=\"kt_login_signin_submit\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className={`btn btn-primary font-weight-bold px-9 py-4 my-3`}\r\n                  >\r\n                    <span className={`${loading ? \"pr-3\" : \"\"}`}>Sign In</span>\r\n                    {loading && (\r\n                        <span className=\"spinner-border text-light\"></span>\r\n                    )}\r\n                  </button>\r\n                  {/* OLD ONE: <button\r\n                    id=\"kt_login_signin_submit\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className={`btn btn-primary shadow px-10 py-5 ${clsx({\r\n                      \"spinner spinner--right spinner--md spinner--light\": loading\r\n                    })}`}\r\n                    style={loadingButtonStyle}\r\n                  >\r\n                    Sign In\r\n                  </button> */}\r\n                </div>\r\n                {/* end::Actions */}\r\n              </form>\r\n          )}\r\n        </Formik>\r\n        {/*end::Form*/}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(Login));\r\n"]},"metadata":{},"sourceType":"module"}
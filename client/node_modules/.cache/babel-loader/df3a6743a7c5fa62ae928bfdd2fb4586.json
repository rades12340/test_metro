{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nvar selectedRemarks = function selectedRemarks(entities, ids) {\n  var _remarks = [];\n  ids.forEach(function (id) {\n    var remark = entities.find(function (el) {\n      return el.id === id;\n    });\n\n    if (remark) {\n      _remarks.push(remark);\n    }\n  });\n  return _remarks;\n};\n\nexport function RemarksFetchDialog() {\n  var _this = this;\n\n  // Remarks UI Context\n  var remarksUIContext = useRemarksUIContext();\n  var remarksUIProps = useMemo(function () {\n    return {\n      ids: remarksUIContext.ids,\n      queryParams: remarksUIContext.queryParams,\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog\n    };\n  }, [remarksUIContext]);\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids)\n    };\n  }, shallowEqual),\n      remarks = _useSelector.remarks;\n\n  useEffect(function () {\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\n      remarksUIProps.closeFetchRemarksDialog();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [remarksUIProps.ids]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: remarksUIProps.showFetchRemarksDialog,\n    onHide: remarksUIProps.closeFetchRemarksDialog,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Fetch selected elements\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-timeline list-timeline-skin-light padding-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-timeline-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, remarks.map(function (remark) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-timeline-item mb-3\",\n      key: remark.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"list-timeline-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label label-lg label-light-success label-inline\",\n      style: {\n        width: \"60px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, \"ID: \", remark.id), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, remark.text, \" \")));\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: remarksUIProps.closeFetchRemarksDialog,\n    className: \"btn btn-light btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: remarksUIProps.closeFetchRemarksDialog,\n    className: \"btn btn-primary btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Ok\"))));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js"],"names":["React","useEffect","useMemo","Modal","shallowEqual","useSelector","useRemarksUIContext","selectedRemarks","entities","ids","_remarks","forEach","id","remark","find","el","push","RemarksFetchDialog","remarksUIContext","remarksUIProps","queryParams","showFetchRemarksDialog","closeFetchRemarksDialog","state","remarks","length","map","width","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst selectedRemarks = (entities, ids) => {\r\n  const _remarks = [];\r\n  ids.forEach((id) => {\r\n    const remark = entities.find((el) => el.id === id);\r\n    if (remark) {\r\n      _remarks.push(remark);\r\n    }\r\n  });\r\n  return _remarks;\r\n};\r\n\r\nexport function RemarksFetchDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\r\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const { remarks } = useSelector(\r\n    (state) => ({\r\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeFetchRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showFetchRemarksDialog}\r\n      onHide={remarksUIProps.closeFetchRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {remarks.map((remark) => (\r\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {remark.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">{remark.text} </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\nexport function CustomerDeleteDialog(_ref) {\n  var id = _ref.id,\n      show = _ref.show,\n      onHide = _ref.onHide;\n  // Customers UI Context\n  var customersUIContext = useCustomersUIContext();\n  var customersUIProps = useMemo(function () {\n    return {\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams\n    };\n  }, [customersUIContext]); // Customers Redux state\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      isLoading: state.customers.actionsLoading\n    };\n  }, shallowEqual),\n      isLoading = _useSelector.isLoading; // if !id we should close modal\n\n\n  useEffect(function () {\n    if (!id) {\n      onHide();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [id]); // looking for loading/dispatch\n\n  useEffect(function () {}, [isLoading, dispatch]);\n\n  var deleteCustomer = function deleteCustomer() {\n    // server request for deleting customer by id\n    dispatch(actions.deleteCustomer(id)).then(function () {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)); // clear selections list\n\n      customersUIProps.setIds([]); // closing delete modal\n\n      onHide();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(ModalProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Customer Delete\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Are you sure to permanently delete this customer?\"), isLoading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, \"Customer is deleting...\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onHide,\n    className: \"btn btn-light btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: deleteCustomer,\n    className: \"btn btn-primary btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Delete\"))));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js"],"names":["React","useEffect","useMemo","Modal","shallowEqual","useDispatch","useSelector","ModalProgressBar","actions","useCustomersUIContext","CustomerDeleteDialog","id","show","onHide","customersUIContext","customersUIProps","setIds","queryParams","dispatch","state","isLoading","customers","actionsLoading","deleteCustomer","then","fetchCustomers"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\r\n\r\nexport function CustomerDeleteDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomer = () => {\r\n    // server request for deleting customer by id\r\n    dispatch(actions.deleteCustomer(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n      // clear selections list\r\n      customersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customer Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this customer?</span>\r\n        )}\r\n        {isLoading && <span>Customer is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomer}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
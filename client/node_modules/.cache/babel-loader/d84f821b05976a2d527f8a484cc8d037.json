{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/_metronic/_partials/controls/AnimateLoading.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProgressBar } from \"react-bootstrap\"; // TODO: Should be rewrited to pure function\n\nvar AnimateLoading = /*#__PURE__*/function (_React$Component) {\n  _inherits(AnimateLoading, _React$Component);\n\n  var _super = _createSuper(AnimateLoading);\n\n  function AnimateLoading() {\n    var _this;\n\n    _classCallCheck(this, AnimateLoading);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      width: 0,\n      routeChanged: false\n    };\n    return _this;\n  }\n\n  _createClass(AnimateLoading, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.location.pathname !== nextProps.location.pathname) {\n        this.animate();\n        this.scrollToTop();\n      }\n    }\n  }, {\n    key: \"scrollToTop\",\n    value: function scrollToTop() {\n      var scrollToTopBtn = document.getElementById(\"kt_scrolltop\");\n\n      if (scrollToTopBtn) {\n        scrollToTopBtn.click();\n      }\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var _this2 = this;\n\n      this.animateTimeout = setTimeout(function () {\n        if (_this2.state.width <= 100) {\n          _this2.setState({\n            width: _this2.state.width + 10\n          });\n\n          _this2.animate();\n        } else {\n          _this2.stopAnimate();\n        }\n      }, 30);\n    }\n  }, {\n    key: \"stopAnimate\",\n    value: function stopAnimate() {\n      var _this3 = this;\n\n      clearTimeout(this.animateInterval);\n      this.stopAnimateTimeout = setTimeout(function () {\n        _this3.setState({\n          width: 0\n        });\n      }, 300);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.stopAnimateTimeout) {\n        clearTimeout(this.stopAnimateTimeout);\n      }\n\n      if (this.animateTimeout) {\n        clearTimeout(this.animateTimeout);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-progress-bar\",\n        style: {\n          height: \"3px\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, this.state.width > 0 && /*#__PURE__*/React.createElement(ProgressBar, {\n        variant: \"info\",\n        now: this.state.width,\n        style: {\n          height: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return AnimateLoading;\n}(React.Component);\n\nexport default withRouter(AnimateLoading);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/_metronic/_partials/controls/AnimateLoading.js"],"names":["React","withRouter","ProgressBar","AnimateLoading","state","width","routeChanged","nextProps","props","location","pathname","animate","scrollToTop","scrollToTopBtn","document","getElementById","click","animateTimeout","setTimeout","setState","stopAnimate","clearTimeout","animateInterval","stopAnimateTimeout","height","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,iBAA1B,C,CAEA;;IACMC,c;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,YAAY,EAAE;AAFR,K;;;;;;uCAKWC,S,EAAW;AAC5B,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,KAAiCH,SAAS,CAACE,QAAV,CAAmBC,QAAxD,EAAkE;AAChE,aAAKC,OAAL;AACA,aAAKC,WAAL;AACD;AACF;;;kCAEa;AACZ,UAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAvB;;AACA,UAAIF,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACG,KAAf;AACD;AACF;;;8BAES;AAAA;;AACR,WAAKC,cAAL,GAAsBC,UAAU,CAAC,YAAM;AACrC,YAAI,MAAI,CAACd,KAAL,CAAWC,KAAX,IAAoB,GAAxB,EAA6B;AAC3B,UAAA,MAAI,CAACc,QAAL,CAAc;AAAEd,YAAAA,KAAK,EAAE,MAAI,CAACD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,WAAd;;AACA,UAAA,MAAI,CAACM,OAAL;AACD,SAHD,MAGO;AACL,UAAA,MAAI,CAACS,WAAL;AACD;AACF,OAP+B,EAO7B,EAP6B,CAAhC;AAQD;;;kCACa;AAAA;;AACZC,MAAAA,YAAY,CAAC,KAAKC,eAAN,CAAZ;AACA,WAAKC,kBAAL,GAA0BL,UAAU,CAAC,YAAM;AACzC,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEd,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OAFmC,EAEjC,GAFiC,CAApC;AAGD;;;2CACsB;AACrB,UAAI,KAAKkB,kBAAT,EAA6B;AAC3BF,QAAAA,YAAY,CAAC,KAAKE,kBAAN,CAAZ;AACD;;AACD,UAAI,KAAKN,cAAT,EAAyB;AACvBI,QAAAA,YAAY,CAAC,KAAKJ,cAAN,CAAZ;AACD;AACF;;;6BACQ;AACP,0BACE;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE,KAAV;AAAiBnB,UAAAA,KAAK,EAAE;AAAxB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAnB,iBACC,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAC,MAArB;AAA4B,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,KAA5C;AAAmD,QAAA,KAAK,EAAE;AAAEmB,UAAAA,MAAM,EAAE;AAAV,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADF;AAUD;;;;EAzD0BxB,KAAK,CAACyB,S;;AA4DnC,eAAexB,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {ProgressBar} from \"react-bootstrap\";\r\n\r\n// TODO: Should be rewrited to pure function\r\nclass AnimateLoading extends React.Component {\r\n  animateTimeout;\r\n  stopAnimateTimeout;\r\n  state = {\r\n    width: 0,\r\n    routeChanged: false\r\n  };\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.location.pathname !== nextProps.location.pathname) {\r\n      this.animate();\r\n      this.scrollToTop();\r\n    }\r\n  }\r\n\r\n  scrollToTop() {\r\n    const scrollToTopBtn = document.getElementById(\"kt_scrolltop\");\r\n    if (scrollToTopBtn) {\r\n      scrollToTopBtn.click();\r\n    }\r\n  }\r\n\r\n  animate() {\r\n    this.animateTimeout = setTimeout(() => {\r\n      if (this.state.width <= 100) {\r\n        this.setState({ width: this.state.width + 10 });\r\n        this.animate();\r\n      } else {\r\n        this.stopAnimate();\r\n      }\r\n    }, 30);\r\n  }\r\n  stopAnimate() {\r\n    clearTimeout(this.animateInterval);\r\n    this.stopAnimateTimeout = setTimeout(() => {\r\n      this.setState({ width: 0 });\r\n    }, 300);\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.stopAnimateTimeout) {\r\n      clearTimeout(this.stopAnimateTimeout);\r\n    }\r\n    if (this.animateTimeout) {\r\n      clearTimeout(this.animateTimeout);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"header-progress-bar\"\r\n        style={{ height: \"3px\", width: \"100%\" }}\r\n      >\r\n        {this.state.width > 0 && (\r\n          <ProgressBar variant=\"info\" now={this.state.width} style={{ height: \"3px\" }}  />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AnimateLoading);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ReactBootstrapExamples/PopoversExamplesPage.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Button, Popover, OverlayTrigger, ButtonToolbar } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nvar popover = /*#__PURE__*/React.createElement(Popover, {\n  id: \"popover-basic\",\n  title: \"Popover right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, \"And here's some \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }\n}, \"amazing\"), \" content. It's very engaging. right?\");\n\nvar Example = function Example() {\n  return /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Click me to see\"));\n};\n\nvar PopoversExamplesPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopoversExamplesPage, _React$Component);\n\n  var _super = _createSuper(PopoversExamplesPage);\n\n  function PopoversExamplesPage() {\n    _classCallCheck(this, PopoversExamplesPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PopoversExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"A popover component, like those found in iOS.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/overlays/#popovers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Basic Example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Example, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Placement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"You can control the placement of the Popover.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, [\"top\", \"right\", \"bottom\", \"left\"].map(function (placement) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: \"sp \".concat(placement),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n          trigger: \"click\",\n          key: placement,\n          placement: placement,\n          overlay: /*#__PURE__*/React.createElement(Popover, {\n            id: \"popover-positioned-\".concat(placement),\n            title: \"Popover \".concat(placement),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }\n          }, \"Holy guacamole!\"), \" Check this info.\"),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"secondary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }, \"Popover on \", placement)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }, \"\\xA0\"));\n      }))));\n    }\n  }]);\n\n  return PopoversExamplesPage;\n}(React.Component);\n\nexport { PopoversExamplesPage as default };\nvar jsCode1 = \"\\nconst popover = (\\n  <Popover id=\\\"popover-basic\\\" title=\\\"Popover right\\\">\\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\\n  </Popover>\\n);\\n\\nconst Example = () => (\\n  <OverlayTrigger trigger=\\\"click\\\" placement=\\\"right\\\" overlay={popover}>\\n    <Button variant=\\\"success\\\">Click me to see</Button>\\n  </OverlayTrigger>\\n);\\n\\nrender(<Example />);\\n\";\nvar jsCode2 = \"\\n<ButtonToolbar>\\n  {['top', 'right', 'bottom', 'left'].map(placement => (\\n    <OverlayTrigger\\n      trigger=\\\"click\\\"\\n      key={placement}\\n      placement={placement}\\n      overlay={\\n        <Popover\\n          id={`popover-positioned-${placement}`}\\n          title={`Popover ${placement}`}\\n        >\\n          <strong>Holy guacamole!</strong> Check this info.\\n        </Popover>\\n      }\\n    >\\n      <Button variant=\\\"secondary\\\">Popover on {placement}</Button>\\n    </OverlayTrigger>\\n  ))}\\n</ButtonToolbar>\\n\";","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ReactBootstrapExamples/PopoversExamplesPage.js"],"names":["React","Button","Popover","OverlayTrigger","ButtonToolbar","Notice","KTCodeExample","popover","Example","PopoversExamplesPage","jsCode1","jsCode2","map","placement","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Popover,\r\n  OverlayTrigger,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nexport default class PopoversExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>A popover component, like those found in iOS.</span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/#popovers\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n          <Example />\r\n        </KTCodeExample>\r\n\r\n        <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Placement\">\r\n          <span>You can control the placement of the Popover.</span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <ButtonToolbar>\r\n            {[\"top\", \"right\", \"bottom\", \"left\"].map(placement => (\r\n              <span key={`sp ${placement}`}>\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  key={placement}\r\n                  placement={placement}\r\n                  overlay={\r\n                    <Popover\r\n                      id={`popover-positioned-${placement}`}\r\n                      title={`Popover ${placement}`}\r\n                    >\r\n                      <strong>Holy guacamole!</strong> Check this info.\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <Button variant=\"secondary\">Popover on {placement}</Button>\r\n                </OverlayTrigger>\r\n                <span>&nbsp;</span>\r\n              </span>\r\n            ))}\r\n          </ButtonToolbar>\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  {['top', 'right', 'bottom', 'left'].map(placement => (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      key={placement}\r\n      placement={placement}\r\n      overlay={\r\n        <Popover\r\n          id={\\`popover-positioned-\\${placement}\\`}\r\n          title={\\`Popover \\${placement}\\`}\r\n        >\r\n          <strong>Holy guacamole!</strong> Check this info.\r\n        </Popover>\r\n      }\r\n    >\r\n      <Button variant=\"secondary\">Popover on {placement}</Button>\r\n    </OverlayTrigger>\r\n  ))}\r\n</ButtonToolbar>\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
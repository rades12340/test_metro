{"ast":null,"code":"import _toConsumableArray from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nexport function Content(_ref) {\n  var children = _ref.children;\n  var match = useRouteMatch() || {};\n  var animationEndClass = \"grid-animateContent-finished\";\n\n  var _useState = useState([\"grid-animateContent\", animationEndClass]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cssClassesState = _useState2[0],\n      setCssClassesState = _useState2[1];\n\n  useEffect(function () {\n    // for animation start should toggle 'grid-animateContent-finished' css class\n    // TODO: change useMemo\n    var fullClasses = _toConsumableArray(cssClassesState);\n\n    var startAnimation = fullClasses.filter(function (el) {\n      return el !== animationEndClass;\n    });\n    setCssClassesState(startAnimation);\n    var timeOutId = setTimeout(function () {\n      setCssClassesState(fullClasses);\n    }, 200);\n    return function () {\n      clearTimeout(timeOutId);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [match.url]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/_metronic/layout/components/content/Content.js"],"names":["React","useEffect","useState","useRouteMatch","Content","children","match","animationEndClass","cssClassesState","setCssClassesState","fullClasses","startAnimation","filter","el","timeOutId","setTimeout","clearTimeout","url"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AAEA,OAAO,SAASC,OAAT,OAA+B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACpC,MAAMC,KAAK,GAAGH,aAAa,MAAM,EAAjC;AACA,MAAMI,iBAAiB,GAAG,8BAA1B;;AAFoC,kBAGUL,QAAQ,CAAC,CACrD,qBADqD,EAErDK,iBAFqD,CAAD,CAHlB;AAAA;AAAA,MAG7BC,eAH6B;AAAA,MAGZC,kBAHY;;AAQpCR,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAMS,WAAW,sBAAOF,eAAP,CAAjB;;AACA,QAAMG,cAAc,GAAGD,WAAW,CAACE,MAAZ,CAAmB,UAAAC,EAAE;AAAA,aAAIA,EAAE,KAAKN,iBAAX;AAAA,KAArB,CAAvB;AACAE,IAAAA,kBAAkB,CAACE,cAAD,CAAlB;AACA,QAAMG,SAAS,GAAGC,UAAU,CAAC,YAAM;AACjCN,MAAAA,kBAAkB,CAACC,WAAD,CAAlB;AACD,KAF2B,EAEzB,GAFyB,CAA5B;AAIA,WAAO,YAAM;AACXM,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACD,KAFD,CAVc,CAad;AACD,GAdQ,EAcN,CAACR,KAAK,CAACW,GAAP,CAdM,CAAT;AAgBA,sBAAO,0CAAGZ,QAAH,CAAP;AACD","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useRouteMatch} from \"react-router-dom\";\r\n\r\nexport function Content({ children }) {\r\n  const match = useRouteMatch() || {};\r\n  const animationEndClass = \"grid-animateContent-finished\";\r\n  const [cssClassesState, setCssClassesState] = useState([\r\n    \"grid-animateContent\",\r\n    animationEndClass\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // for animation start should toggle 'grid-animateContent-finished' css class\r\n    // TODO: change useMemo\r\n    const fullClasses = [...cssClassesState];\r\n    const startAnimation = fullClasses.filter(el => el !== animationEndClass);\r\n    setCssClassesState(startAnimation);\r\n    const timeOutId = setTimeout(() => {\r\n      setCssClassesState(fullClasses);\r\n    }, 200);\r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [match.url]);\r\n\r\n  return <>{children}</>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
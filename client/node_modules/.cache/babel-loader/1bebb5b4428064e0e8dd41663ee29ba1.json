{"ast":null,"code":"import _toConsumableArray from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { reduxBatch } from \"@manaflair/redux-batch\";\nimport { persistStore } from \"redux-persist\";\nimport { rootReducer, rootSaga } from \"./rootReducer\";\nvar sagaMiddleware = createSagaMiddleware();\nvar middleware = [].concat(_toConsumableArray(getDefaultMiddleware({\n  immutableCheck: false,\n  serializableCheck: false,\n  thunk: true\n})), [sagaMiddleware]);\nvar store = configureStore({\n  reducer: rootReducer,\n  middleware: middleware,\n  devTools: process.env.NODE_ENV !== \"production\",\n  enhancers: [reduxBatch]\n});\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\n\nexport var persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","createSagaMiddleware","reduxBatch","persistStore","rootReducer","rootSaga","sagaMiddleware","middleware","immutableCheck","serializableCheck","thunk","store","reducer","devTools","process","env","NODE_ENV","enhancers","persistor","run"],"mappings":";AAAA,SAAQA,cAAR,EAAwBC,oBAAxB,QAAmD,kBAAnD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,eAApC;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,IAAMM,UAAU,gCACXP,oBAAoB,CAAC;AACtBQ,EAAAA,cAAc,EAAE,KADM;AAEtBC,EAAAA,iBAAiB,EAAE,KAFG;AAGtBC,EAAAA,KAAK,EAAE;AAHe,CAAD,CADT,IAMdJ,cANc,EAAhB;AASA,IAAMK,KAAK,GAAGZ,cAAc,CAAC;AAC3Ba,EAAAA,OAAO,EAAER,WADkB;AAE3BG,EAAAA,UAAU,EAAVA,UAF2B;AAG3BM,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAHR;AAI3BC,EAAAA,SAAS,EAAE,CAACf,UAAD;AAJgB,CAAD,CAA5B;AAOA;;;;;AAIA,OAAO,IAAMgB,SAAS,GAAGf,YAAY,CAACQ,KAAD,CAA9B;AAEPL,cAAc,CAACa,GAAf,CAAmBd,QAAnB;AAEA,eAAeM,KAAf","sourcesContent":["import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {reduxBatch} from \"@manaflair/redux-batch\";\r\nimport {persistStore} from \"redux-persist\";\r\nimport {rootReducer, rootSaga} from \"./rootReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true\r\n  }),\r\n  sagaMiddleware\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n  enhancers: [reduxBatch]\r\n});\r\n\r\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}
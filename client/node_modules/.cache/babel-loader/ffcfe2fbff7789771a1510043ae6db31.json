{"ast":null,"code":"import * as requestFromServer from \"./productsCrud\";\nimport { productsSlice, callTypes } from \"./productsSlice\";\nvar actions = productsSlice.actions;\nexport var fetchProducts = function fetchProducts(queryParams) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.list\n    }));\n    return requestFromServer.findProducts(queryParams).then(function (response) {\n      var _response$data = response.data,\n          totalCount = _response$data.totalCount,\n          entities = _response$data.entities;\n      dispatch(actions.productsFetched({\n        totalCount: totalCount,\n        entities: entities\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't find products\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.list\n      }));\n    });\n  };\n};\nexport var fetchProduct = function fetchProduct(id) {\n  return function (dispatch) {\n    if (!id) {\n      return dispatch(actions.productFetched({\n        productForEdit: undefined\n      }));\n    }\n\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.getProductById(id).then(function (response) {\n      var product = response.data;\n      dispatch(actions.productFetched({\n        productForEdit: product\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't find product\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var deleteProduct = function deleteProduct(id) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.deleteProduct(id).then(function (response) {\n      dispatch(actions.productDeleted({\n        id: id\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't delete product\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var createProduct = function createProduct(productForCreation) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.createProduct(productForCreation).then(function (response) {\n      var product = response.data.product;\n      dispatch(actions.productCreated({\n        product: product\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't create product\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var updateProduct = function updateProduct(product) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.updateProduct(product).then(function () {\n      dispatch(actions.productUpdated({\n        product: product\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't update product\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var updateProductsStatus = function updateProductsStatus(ids, status) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.updateStatusForProducts(ids, status).then(function () {\n      dispatch(actions.productsStatusUpdated({\n        ids: ids,\n        status: status\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't update products status\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var deleteProducts = function deleteProducts(ids) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.deleteProducts(ids).then(function () {\n      dispatch(actions.productsDeleted({\n        ids: ids\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't delete products\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/_redux/products/productsActions.js"],"names":["requestFromServer","productsSlice","callTypes","actions","fetchProducts","queryParams","dispatch","startCall","callType","list","findProducts","then","response","data","totalCount","entities","productsFetched","catch","error","clientMessage","catchError","fetchProduct","id","productFetched","productForEdit","undefined","action","getProductById","product","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","ids","status","updateStatusForProducts","productsStatusUpdated","deleteProducts","productsDeleted"],"mappings":"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","sourcesContent":["import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findProducts(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.productsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = response.data;\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { product } = response.data;\r\n      dispatch(actions.productCreated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/_metronic/_partials/controls/forms/Input.js\";\nimport React from \"react\";\nimport { FieldFeedbackLabel } from \"./FieldFeedbackLabel\";\n\nvar getFieldCSSClasses = function getFieldCSSClasses(touched, errors) {\n  var classes = [\"form-control\"];\n\n  if (touched && errors) {\n    classes.push(\"is-invalid\");\n  }\n\n  if (touched && !errors) {\n    classes.push(\"is-valid\");\n  }\n\n  return classes.join(\" \");\n};\n\nexport function Input(_ref) {\n  var field = _ref.field,\n      _ref$form = _ref.form,\n      touched = _ref$form.touched,\n      errors = _ref$form.errors,\n      label = _ref.label,\n      _ref$withFeedbackLabe = _ref.withFeedbackLabel,\n      withFeedbackLabel = _ref$withFeedbackLabe === void 0 ? true : _ref$withFeedbackLabe,\n      customFeedbackLabel = _ref.customFeedbackLabel,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"text\" : _ref$type,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\", \"label\", \"withFeedbackLabel\", \"customFeedbackLabel\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, label && /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Enter \", label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: type,\n    className: getFieldCSSClasses(touched[field.name], errors[field.name])\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), withFeedbackLabel && /*#__PURE__*/React.createElement(FieldFeedbackLabel, {\n    error: errors[field.name],\n    touched: touched[field.name],\n    label: label,\n    type: type,\n    customFeedbackLabel: customFeedbackLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/_metronic/_partials/controls/forms/Input.js"],"names":["React","FieldFeedbackLabel","getFieldCSSClasses","touched","errors","classes","push","join","Input","field","form","label","withFeedbackLabel","customFeedbackLabel","type","props","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAUC,MAAV,EAAqB;AAC9C,MAAMC,OAAO,GAAG,CAAC,cAAD,CAAhB;;AACA,MAAIF,OAAO,IAAIC,MAAf,EAAuB;AACrBC,IAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD;;AAED,MAAIH,OAAO,IAAI,CAACC,MAAhB,EAAwB;AACtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AACD;;AAED,SAAOD,OAAO,CAACE,IAAR,CAAa,GAAb,CAAP;AACD,CAXD;;AAaA,OAAO,SAASC,KAAT,OAQJ;AAAA,MAPDC,KAOC,QAPDA,KAOC;AAAA,uBANDC,IAMC;AAAA,MANOP,OAMP,aANOA,OAMP;AAAA,MANgBC,MAMhB,aANgBA,MAMhB;AAAA,MALDO,KAKC,QALDA,KAKC;AAAA,mCAJDC,iBAIC;AAAA,MAJDA,iBAIC,sCAJmB,IAInB;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,uBAFDC,IAEC;AAAA,MAFDA,IAEC,0BAFM,MAEN;AAAA,MADEC,KACF;;AACD,sBACE,0CACGJ,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAcA,KAAd,CADZ,eAEE;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,SAAS,EAAEZ,kBAAkB,CAACC,OAAO,CAACM,KAAK,CAACO,IAAP,CAAR,EAAsBZ,MAAM,CAACK,KAAK,CAACO,IAAP,CAA5B;AAF/B,KAGMP,KAHN,EAIMM,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQGH,iBAAiB,iBAChB,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACK,KAAK,CAACO,IAAP,CADf;AAEE,IAAA,OAAO,EAAEb,OAAO,CAACM,KAAK,CAACO,IAAP,CAFlB;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,IAAI,EAAEG,IAJR;AAKE,IAAA,mBAAmB,EAAED,mBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF;AAoBD","sourcesContent":["import React from \"react\";\r\nimport {FieldFeedbackLabel} from \"./FieldFeedbackLabel\";\r\n\r\nconst getFieldCSSClasses = (touched, errors) => {\r\n  const classes = [\"form-control\"];\r\n  if (touched && errors) {\r\n    classes.push(\"is-invalid\");\r\n  }\r\n\r\n  if (touched && !errors) {\r\n    classes.push(\"is-valid\");\r\n  }\r\n\r\n  return classes.join(\" \");\r\n};\r\n\r\nexport function Input({\r\n  field, // { name, value, onChange, onBlur }\r\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n  label,\r\n  withFeedbackLabel = true,\r\n  customFeedbackLabel,\r\n  type = \"text\",\r\n  ...props\r\n}) {\r\n  return (\r\n    <>\r\n      {label && <label>Enter {label}</label>}\r\n      <input\r\n        type={type}\r\n        className={getFieldCSSClasses(touched[field.name], errors[field.name])}\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {withFeedbackLabel && (\r\n        <FieldFeedbackLabel\r\n          error={errors[field.name]}\r\n          touched={touched[field.name]}\r\n          label={label}\r\n          type={type}\r\n          customFeedbackLabel={customFeedbackLabel}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialSpecificationsState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  specificationForEdit: undefined,\n  lastError: null\n};\nexport var callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\nexport var specificationsSlice = createSlice({\n  name: \"specifications\",\n  initialState: initialSpecificationsState,\n  reducers: {\n    catchError: function catchError(state, action) {\n      state.error = \"\".concat(action.type, \": \").concat(action.payload.error);\n\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: function startCall(state, action) {\n      state.error = null;\n\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getSpecificationById\n    specificationFetched: function specificationFetched(state, action) {\n      state.actionsLoading = false;\n      state.specificationForEdit = action.payload.specificationForEdit;\n      state.error = null;\n    },\n    // findSpecifications\n    specificationsFetched: function specificationsFetched(state, action) {\n      var _action$payload = action.payload,\n          totalCount = _action$payload.totalCount,\n          entities = _action$payload.entities;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createSpecification\n    specificationCreated: function specificationCreated(state, action) {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.specification);\n    },\n    // updateSpecification\n    specificationUpdated: function specificationUpdated(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(function (entity) {\n        if (entity.id === action.payload.specification.id) {\n          return action.payload.specification;\n        }\n\n        return entity;\n      });\n    },\n    // deleteSpecification\n    specificationDeleted: function specificationDeleted(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(function (el) {\n        return el.id !== action.payload.id;\n      });\n    },\n    // deleteSpecifications\n    specificationsDeleted: function specificationsDeleted(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(function (el) {\n        return !action.payload.ids.includes(el.id);\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/_redux/specifications/specificationsSlice.js"],"names":["createSlice","initialSpecificationsState","listLoading","actionsLoading","totalCount","entities","specificationForEdit","undefined","lastError","callTypes","list","action","specificationsSlice","name","initialState","reducers","catchError","state","error","type","payload","callType","startCall","specificationFetched","specificationsFetched","specificationCreated","push","specification","specificationUpdated","map","entity","id","specificationDeleted","filter","el","specificationsDeleted","ids","includes"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialSpecificationsState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  specificationForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const specificationsSlice = createSlice({\r\n  name: \"specifications\",\r\n  initialState: initialSpecificationsState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getSpecificationById\r\n    specificationFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.specificationForEdit = action.payload.specificationForEdit;\r\n      state.error = null;\r\n    },\r\n    // findSpecifications\r\n    specificationsFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createSpecification\r\n    specificationCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.specification);\r\n    },\r\n    // updateSpecification\r\n    specificationUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.specification.id) {\r\n          return action.payload.specification;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteSpecification\r\n    specificationDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteSpecifications\r\n    specificationsDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    }\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
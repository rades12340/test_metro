{"ast":null,"code":"import _slicedToArray from \"/Applications/MAMP/htdocs/project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nvar selectedCustomers = function selectedCustomers(entities, ids) {\n  var _customers = [];\n  ids.forEach(function (id) {\n    var customer = entities.find(function (el) {\n      return el.id === id;\n    });\n\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersUpdateStateDialog(_ref) {\n  var _this = this;\n\n  var show = _ref.show,\n      onHide = _ref.onHide;\n  // Customers UI Context\n  var customersUIContext = useCustomersUIContext();\n  var customersUIProps = useMemo(function () {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams\n    };\n  }, [customersUIContext]); // Customers Redux state\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      customers: selectedCustomers(state.customers.entities, customersUIProps.ids),\n      isLoading: state.customers.actionsLoading\n    };\n  }, shallowEqual),\n      customers = _useSelector.customers,\n      isLoading = _useSelector.isLoading; // if !id we should close modal\n\n\n  useEffect(function () {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [customersUIProps.ids]);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var updateStatus = function updateStatus() {\n    // server request for update customers status by selected ids\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(function () {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(function () {\n        // clear selections list\n        customersUIProps.setIds([]); // closing delete modal\n\n        onHide();\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Status has been updated for selected customers\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"overlay overlay-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-layer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner spinner-lg spinner-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline timeline-5 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, customers.map(function (customer) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-item align-items-start\",\n      key: \"customersUpdate\".concat(customer.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-badge\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-genderless text-\".concat(CustomerStatusCssClasses[customer.status], \" icon-xxl\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-content text-dark-50 mr-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label label-lg label-light-\".concat(CustomerStatusCssClasses[customer.status], \" label-inline\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"ID: \", customer.id), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, customer.lastName, \", \", customer.firstName)));\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: status,\n    onChange: function onChange(e) {\n      return setStatus(+e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Suspended\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Pending\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onHide,\n    className: \"btn btn-light btn-elevate mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: updateStatus,\n    className: \"btn btn-primary btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Update Status\"))));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/project/client/src/app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js"],"names":["React","useEffect","useState","useMemo","Modal","shallowEqual","useDispatch","useSelector","CustomerStatusCssClasses","actions","useCustomersUIContext","selectedCustomers","entities","ids","_customers","forEach","id","customer","find","el","push","CustomersUpdateStateDialog","show","onHide","customersUIContext","customersUIProps","setIds","queryParams","state","customers","isLoading","actionsLoading","length","status","setStatus","dispatch","updateStatus","updateCustomersStatus","then","fetchCustomers","map","lastName","firstName","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,4CAAzB;AACA,SAASC,qBAAT,QAAsC,uBAAtC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,GAAX,EAAmB;AAC3C,MAAMC,UAAU,GAAG,EAAnB;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAACC,EAAD,EAAQ;AAClB,QAAMC,QAAQ,GAAGL,QAAQ,CAACM,IAAT,CAAc,UAACC,EAAD;AAAA,aAAQA,EAAE,CAACH,EAAH,KAAUA,EAAlB;AAAA,KAAd,CAAjB;;AACA,QAAIC,QAAJ,EAAc;AACZH,MAAAA,UAAU,CAACM,IAAX,CAAgBH,QAAhB;AACD;AACF,GALD;AAMA,SAAOH,UAAP;AACD,CATD;;AAWA,OAAO,SAASO,0BAAT,OAAsD;AAAA;;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC3D;AACA,MAAMC,kBAAkB,GAAGd,qBAAqB,EAAhD;AACA,MAAMe,gBAAgB,GAAGtB,OAAO,CAAC,YAAM;AACrC,WAAO;AACLU,MAAAA,GAAG,EAAEW,kBAAkB,CAACX,GADnB;AAELa,MAAAA,MAAM,EAAEF,kBAAkB,CAACE,MAFtB;AAGLC,MAAAA,WAAW,EAAEH,kBAAkB,CAACG;AAH3B,KAAP;AAKD,GAN+B,EAM7B,CAACH,kBAAD,CAN6B,CAAhC,CAH2D,CAW3D;;AAX2D,qBAY1BjB,WAAW,CAC1C,UAACqB,KAAD;AAAA,WAAY;AACVC,MAAAA,SAAS,EAAElB,iBAAiB,CAC1BiB,KAAK,CAACC,SAAN,CAAgBjB,QADU,EAE1Ba,gBAAgB,CAACZ,GAFS,CADlB;AAKViB,MAAAA,SAAS,EAAEF,KAAK,CAACC,SAAN,CAAgBE;AALjB,KAAZ;AAAA,GAD0C,EAQ1C1B,YAR0C,CAZe;AAAA,MAYnDwB,SAZmD,gBAYnDA,SAZmD;AAAA,MAYxCC,SAZwC,gBAYxCA,SAZwC,EAuB3D;;;AACA7B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACwB,gBAAgB,CAACZ,GAAlB,IAAyBY,gBAAgB,CAACZ,GAAjB,CAAqBmB,MAArB,KAAgC,CAA7D,EAAgE;AAC9DT,MAAAA,MAAM;AACP,KAHa,CAId;;AACD,GALQ,EAKN,CAACE,gBAAgB,CAACZ,GAAlB,CALM,CAAT;;AAxB2D,kBA+B/BX,QAAQ,CAAC,CAAD,CA/BuB;AAAA;AAAA,MA+BpD+B,MA/BoD;AAAA,MA+B5CC,SA/B4C;;AAiC3D,MAAMC,QAAQ,GAAG7B,WAAW,EAA5B;;AACA,MAAM8B,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB;AACAD,IAAAA,QAAQ,CAAC1B,OAAO,CAAC4B,qBAAR,CAA8BZ,gBAAgB,CAACZ,GAA/C,EAAoDoB,MAApD,CAAD,CAAR,CAAsEK,IAAtE,CACE,YAAM;AACJ;AACAH,MAAAA,QAAQ,CAAC1B,OAAO,CAAC8B,cAAR,CAAuBd,gBAAgB,CAACE,WAAxC,CAAD,CAAR,CAA+DW,IAA/D,CACE,YAAM;AACJ;AACAb,QAAAA,gBAAgB,CAACC,MAAjB,CAAwB,EAAxB,EAFI,CAGJ;;AACAH,QAAAA,MAAM;AACP,OANH;AAQD,KAXH;AAaD,GAfD;;AAiBA,sBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,uBAAgB,8BAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,CALF,eAUE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGO,SAAS,iBACR;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,eASE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACW,GAAV,CAAc,UAACvB,QAAD;AAAA,wBACb;AACE,MAAA,SAAS,EAAC,iCADZ;AAEE,MAAA,GAAG,2BAAoBA,QAAQ,CAACD,EAA7B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAC,6EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,kCACPR,wBAAwB,CAACS,QAAQ,CAACgB,MAAV,CADjB,cADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,eAYE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,uCACPzB,wBAAwB,CAACS,QAAQ,CAACgB,MAAV,CADjB,kBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAKOhB,QAAQ,CAACD,EALhB,CADF,eAQE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,CAACwB,QADZ,QACwBxB,QAAQ,CAACyB,SADjC,CARF,CAZF,CADa;AAAA,GAAd,CADH,CATF,CAVF,eAiDE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAET,MAFT;AAGE,IAAA,QAAQ,EAAE,kBAACU,CAAD;AAAA,aAAOT,SAAS,CAAC,CAACS,CAAC,CAACC,MAAF,CAASC,KAAX,CAAhB;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEtB,MAFX;AAGE,IAAA,SAAS,EAAC,gCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEa,YAFX;AAGE,IAAA,SAAS,EAAC,6BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,CAZF,CAjDF,CADF;AAiFD","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStateDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for update customers status by selected ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block\">\r\n        {/*begin::Loading*/}\r\n        {isLoading && (\r\n          <div className=\"overlay-layer\">\r\n            <div className=\"spinner spinner-lg spinner-primary\" />\r\n          </div>\r\n        )}\r\n        {/*end::Loading*/}\r\n\r\n        <div className=\"timeline timeline-5 mt-3\">\r\n          {customers.map((customer) => (\r\n            <div\r\n              className=\"timeline-item align-items-start\"\r\n              key={`customersUpdate${customer.id}`}\r\n            >\r\n              <div className=\"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\" />\r\n              <div className=\"timeline-badge\">\r\n                <i\r\n                  className={`fa fa-genderless text-${\r\n                    CustomerStatusCssClasses[customer.status]\r\n                  } icon-xxl`}\r\n                />\r\n              </div>\r\n              <div className=\"timeline-content text-dark-50 mr-5\">\r\n                <span\r\n                  className={`label label-lg label-light-${\r\n                    CustomerStatusCssClasses[customer.status]\r\n                  } label-inline`}\r\n                >\r\n                  ID: {customer.id}\r\n                </span>\r\n                <span className=\"ml-3\">\r\n                  {customer.lastName}, {customer.firstName}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Suspended</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Pending</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate mr-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}